[{"/Users/permindersingh/Projects/reviews-system/app/src/index.js":"1","/Users/permindersingh/Projects/reviews-system/app/src/App.js":"2","/Users/permindersingh/Projects/reviews-system/app/src/utils/serviceWorker.js":"3","/Users/permindersingh/Projects/reviews-system/app/src/utils/sentry.js":"4","/Users/permindersingh/Projects/reviews-system/app/src/utils/apolloClient.js":"5","/Users/permindersingh/Projects/reviews-system/app/src/utils/theme.js":"6","/Users/permindersingh/Projects/reviews-system/app/src/utils/routes.js":"7","/Users/permindersingh/Projects/reviews-system/app/src/utils/config.js":"8","/Users/permindersingh/Projects/reviews-system/app/src/store/index.js":"9","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/index.js":"10","/Users/permindersingh/Projects/reviews-system/app/src/pages/Home.js":"11","/Users/permindersingh/Projects/reviews-system/app/src/pages/About.js":"12","/Users/permindersingh/Projects/reviews-system/app/src/pages/SetPassword.js":"13","/Users/permindersingh/Projects/reviews-system/app/src/pages/Login.js":"14","/Users/permindersingh/Projects/reviews-system/app/src/pages/404.js":"15","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Pricing.js":"16","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Help.js":"17","/Users/permindersingh/Projects/reviews-system/app/src/pages/ForgotPassword.js":"18","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Dashboard.js":"19","/Users/permindersingh/Projects/reviews-system/app/src/pages/Contact.js":"20","/Users/permindersingh/Projects/reviews-system/app/src/pages/Test.js":"21","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Dashboard.js":"22","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/CreateProject.js":"23","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/ClientProjects.js":"24","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectSubscription.js":"25","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectSetting.js":"26","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Help.js":"27","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Discounts.js":"28","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Settings.js":"29","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectDashboard.js":"30","/Users/permindersingh/Projects/reviews-system/app/src/pages/Register.js":"31","/Users/permindersingh/Projects/reviews-system/app/src/pages/NotAllowed.js":"32","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/ProjectInfo.js":"33","/Users/permindersingh/Projects/reviews-system/app/src/store/schema.js":"34","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/InputGroup.js":"35","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Subtitle.js":"36","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/CreditCardInput.js":"37","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Heading.js":"38","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/SelectGroup.js":"39","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Loading.js":"40","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Button.js":"41","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/CheckBox.js":"42","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Title.js":"43","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Message.js":"44","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/ColorPicker.js":"45","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/TextArea.js":"46","/Users/permindersingh/Projects/reviews-system/app/src/components/Seo.js":"47","/Users/permindersingh/Projects/reviews-system/app/src/components/Layout.js":"48","/Users/permindersingh/Projects/reviews-system/app/src/components/CopyRight.js":"49","/Users/permindersingh/Projects/reviews-system/app/src/components/Sidebar.js":"50","/Users/permindersingh/Projects/reviews-system/app/src/components/Header.js":"51","/Users/permindersingh/Projects/reviews-system/app/src/components/RegisterForm.js":"52","/Users/permindersingh/Projects/reviews-system/app/src/components/MainColumn.js":"53","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectInfoForm.js":"54","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminHeader.js":"55","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectDetails.js":"56","/Users/permindersingh/Projects/reviews-system/app/src/components/SettingsForm.js":"57","/Users/permindersingh/Projects/reviews-system/app/src/components/DiscountForm.js":"58","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectSettingForm.js":"59","/Users/permindersingh/Projects/reviews-system/app/src/components/PaymentConfirmation.js":"60","/Users/permindersingh/Projects/reviews-system/app/src/components/ProgressBar.js":"61","/Users/permindersingh/Projects/reviews-system/app/src/components/PaymentForm.js":"62","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectSetupForm.js":"63","/Users/permindersingh/Projects/reviews-system/app/src/components/ContactForm.js":"64","/Users/permindersingh/Projects/reviews-system/app/src/components/AuthFooter.js":"65","/Users/permindersingh/Projects/reviews-system/app/src/components/AuthHeader.js":"66","/Users/permindersingh/Projects/reviews-system/app/src/components/Disclaimer.js":"67","/Users/permindersingh/Projects/reviews-system/app/src/components/NDAScroller.js":"68","/Users/permindersingh/Projects/reviews-system/app/src/components/PricingForm.js":"69","/Users/permindersingh/Projects/reviews-system/app/src/components/ForgotPasswordForm.js":"70","/Users/permindersingh/Projects/reviews-system/app/src/components/HelpForm.js":"71","/Users/permindersingh/Projects/reviews-system/app/src/components/LoginForm.js":"72","/Users/permindersingh/Projects/reviews-system/app/src/components/Footer.js":"73","/Users/permindersingh/Projects/reviews-system/app/src/components/SetPasswordForm.js":"74","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminSubHeader.js":"75","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminUsers.js":"76","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminUsersForm.js":"77","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectDashboardHero.js":"78","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectPages.js":"79","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectUpdate.js":"80","/Users/permindersingh/Projects/reviews-system/app/src/utils/helpers.js":"81","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectGuestDetails.js":"82"},{"size":420,"mtime":1608185805967,"results":"83","hashOfConfig":"84"},{"size":889,"mtime":1608185830510,"results":"85","hashOfConfig":"84"},{"size":5659,"mtime":1608185802395,"results":"86","hashOfConfig":"84"},{"size":229,"mtime":1608185801295,"results":"87","hashOfConfig":"84"},{"size":1417,"mtime":1602060858000,"results":"88","hashOfConfig":"84"},{"size":1834,"mtime":1607665878952,"results":"89","hashOfConfig":"84"},{"size":4685,"mtime":1608186498700,"results":"90","hashOfConfig":"84"},{"size":309,"mtime":1608185925551,"results":"91","hashOfConfig":"84"},{"size":516,"mtime":1608186213134,"results":"92","hashOfConfig":"84"},{"size":608,"mtime":1608186754734,"results":"93","hashOfConfig":"84"},{"size":658,"mtime":1602060858000,"results":"94","hashOfConfig":"84"},{"size":269,"mtime":1602060858000,"results":"95","hashOfConfig":"84"},{"size":1930,"mtime":1603564400000,"results":"96","hashOfConfig":"84"},{"size":4245,"mtime":1604909561000,"results":"97","hashOfConfig":"84"},{"size":475,"mtime":1602060858000,"results":"98","hashOfConfig":"84"},{"size":4662,"mtime":1604909561000,"results":"99","hashOfConfig":"84"},{"size":4093,"mtime":1604909561000,"results":"100","hashOfConfig":"84"},{"size":4911,"mtime":1607182918589,"results":"101","hashOfConfig":"84"},{"size":3102,"mtime":1608186912372,"results":"102","hashOfConfig":"84"},{"size":1011,"mtime":1602060858000,"results":"103","hashOfConfig":"84"},{"size":336,"mtime":1607668814717,"results":"104","hashOfConfig":"84"},{"size":4394,"mtime":1608186901278,"results":"105","hashOfConfig":"84"},{"size":5336,"mtime":1606985484707,"results":"106","hashOfConfig":"84"},{"size":7178,"mtime":1608186934729,"results":"107","hashOfConfig":"84"},{"size":3140,"mtime":1603564400000,"results":"108","hashOfConfig":"84"},{"size":2272,"mtime":1607665878952,"results":"109","hashOfConfig":"84"},{"size":1529,"mtime":1602060858000,"results":"110","hashOfConfig":"84"},{"size":4434,"mtime":1604909561000,"results":"111","hashOfConfig":"84"},{"size":2100,"mtime":1602060858000,"results":"112","hashOfConfig":"84"},{"size":2036,"mtime":1608186847148,"results":"113","hashOfConfig":"84"},{"size":5865,"mtime":1604909561000,"results":"114","hashOfConfig":"84"},{"size":538,"mtime":1602060858000,"results":"115","hashOfConfig":"84"},{"size":3324,"mtime":1602658616000,"results":"116","hashOfConfig":"84"},{"size":341,"mtime":1608186249715,"results":"117","hashOfConfig":"84"},{"size":2173,"mtime":1607665878951,"results":"118","hashOfConfig":"84"},{"size":340,"mtime":1602060858000,"results":"119","hashOfConfig":"84"},{"size":339,"mtime":1602060858000,"results":"120","hashOfConfig":"84"},{"size":343,"mtime":1603564400000,"results":"121","hashOfConfig":"84"},{"size":1601,"mtime":1607665878951,"results":"122","hashOfConfig":"84"},{"size":407,"mtime":1602060858000,"results":"123","hashOfConfig":"84"},{"size":1939,"mtime":1607182918588,"results":"124","hashOfConfig":"84"},{"size":919,"mtime":1602060858000,"results":"125","hashOfConfig":"84"},{"size":604,"mtime":1602060858000,"results":"126","hashOfConfig":"84"},{"size":375,"mtime":1602060858000,"results":"127","hashOfConfig":"84"},{"size":2013,"mtime":1602658616000,"results":"128","hashOfConfig":"84"},{"size":1343,"mtime":1607665878951,"results":"129","hashOfConfig":"84"},{"size":1796,"mtime":1602060858000,"results":"130","hashOfConfig":"84"},{"size":1392,"mtime":1604909561000,"results":"131","hashOfConfig":"84"},{"size":414,"mtime":1602060858000,"results":"132","hashOfConfig":"84"},{"size":4388,"mtime":1607665878950,"results":"133","hashOfConfig":"84"},{"size":6057,"mtime":1607665878950,"results":"134","hashOfConfig":"84"},{"size":6233,"mtime":1604909561000,"results":"135","hashOfConfig":"84"},{"size":341,"mtime":1603785250000,"results":"136","hashOfConfig":"84"},{"size":3330,"mtime":1602060858000,"results":"137","hashOfConfig":"84"},{"size":3070,"mtime":1608186865024,"results":"138","hashOfConfig":"84"},{"size":1560,"mtime":1602060858000,"results":"139","hashOfConfig":"84"},{"size":3357,"mtime":1602658616000,"results":"140","hashOfConfig":"84"},{"size":2593,"mtime":1602060858000,"results":"141","hashOfConfig":"84"},{"size":6684,"mtime":1607665878950,"results":"142","hashOfConfig":"84"},{"size":1275,"mtime":1604909561000,"results":"143","hashOfConfig":"84"},{"size":1449,"mtime":1606213562000,"results":"144","hashOfConfig":"84"},{"size":12546,"mtime":1604909561000,"results":"145","hashOfConfig":"84"},{"size":4162,"mtime":1602060858000,"results":"146","hashOfConfig":"84"},{"size":3057,"mtime":1602060858000,"results":"147","hashOfConfig":"84"},{"size":1148,"mtime":1607182918587,"results":"148","hashOfConfig":"84"},{"size":1786,"mtime":1604909561000,"results":"149","hashOfConfig":"84"},{"size":235,"mtime":1604909561000,"results":"150","hashOfConfig":"84"},{"size":759,"mtime":1602060858000,"results":"151","hashOfConfig":"84"},{"size":2813,"mtime":1604909561000,"results":"152","hashOfConfig":"84"},{"size":1949,"mtime":1604909561000,"results":"153","hashOfConfig":"84"},{"size":2117,"mtime":1602060858000,"results":"154","hashOfConfig":"84"},{"size":2548,"mtime":1603785250000,"results":"155","hashOfConfig":"84"},{"size":818,"mtime":1607182918588,"results":"156","hashOfConfig":"84"},{"size":2408,"mtime":1602060858000,"results":"157","hashOfConfig":"84"},{"size":4695,"mtime":1608186740216,"results":"158","hashOfConfig":"84"},{"size":3040,"mtime":1604909561000,"results":"159","hashOfConfig":"84"},{"size":1837,"mtime":1602060858000,"results":"160","hashOfConfig":"84"},{"size":1646,"mtime":1603785250000,"results":"161","hashOfConfig":"84"},{"size":935,"mtime":1602060858000,"results":"162","hashOfConfig":"84"},{"size":411,"mtime":1602060858000,"results":"163","hashOfConfig":"84"},{"size":289,"mtime":1602060858000,"results":"164","hashOfConfig":"84"},{"size":852,"mtime":1602060858000,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1totg39",{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"168"},{"filePath":"172","messages":"173","errorCount":3,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"191","messages":"192","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":7,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"168"},{"filePath":"201","messages":"202","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":6,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"168"},{"filePath":"210","messages":"211","errorCount":8,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"168"},{"filePath":"231","messages":"232","errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":1,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"168"},{"filePath":"237","messages":"238","errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"168"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":10,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"168"},{"filePath":"251","messages":"252","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":9,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"168"},{"filePath":"259","messages":"260","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":9,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"168"},{"filePath":"269","messages":"270","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"168"},{"filePath":"272","messages":"273","errorCount":17,"warningCount":0,"fixableErrorCount":16,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"168"},{"filePath":"275","messages":"276","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"168"},{"filePath":"278","messages":"279","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"168"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":8,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":6,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"168"},{"filePath":"294","messages":"295","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"168"},{"filePath":"297","messages":"298","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"168"},{"filePath":"300","messages":"301","errorCount":17,"warningCount":0,"fixableErrorCount":16,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"168"},{"filePath":"303","messages":"304","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"168"},{"filePath":"306","messages":"307","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"168"},{"filePath":"309","messages":"310","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"168"},{"filePath":"312","messages":"313","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"168"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"319","messages":"320","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"168"},{"filePath":"325","messages":"326","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"168"},{"filePath":"328","messages":"329","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"168"},{"filePath":"331","messages":"332","errorCount":8,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"168"},{"filePath":"337","messages":"338","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"168"},{"filePath":"340","messages":"341","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"168"},{"filePath":"343","messages":"344","errorCount":5,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"168"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"168"},{"filePath":"351","messages":"352","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"168"},{"filePath":"354","messages":"355","errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"168"},{"filePath":"357","messages":"358","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"168"},{"filePath":"360","messages":"361","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"168"},{"filePath":"363","messages":"364","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"168"},{"filePath":"366","messages":"367","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"168"},{"filePath":"369","messages":"370","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"168"},{"filePath":"372","messages":"373","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"168"},{"filePath":"375","messages":"376","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"168"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"380","messages":"381","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"168"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"385","messages":"386","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"168"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"/Users/permindersingh/Projects/reviews-system/app/src/index.js",[],["390","391","392","393","394","395"],"/Users/permindersingh/Projects/reviews-system/app/src/App.js",["396"],"import React, { useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { StoreProvider } from 'easy-peasy';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ApolloProvider } from '@apollo/client';\n\nimport theme from './utils/theme';\nimport apolloClient from './utils/apolloClient';\nimport { store, persistor } from './store';\nimport Routes from './utils/routes';\nimport { Loading } from './components/elements';\n\nconst App = () => {\n  useEffect(() => {\n    console.log('app ready');\n  }, []);\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <StoreProvider store={store}>\n          <ThemeProvider theme={theme}>\n            <Routes />\n          </ThemeProvider>\n        </StoreProvider>\n      </PersistGate>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","/Users/permindersingh/Projects/reviews-system/app/src/utils/serviceWorker.js",["397","398","399","400","401","402","403","404"],"import swal from 'sweetalert';\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // force reload\n              setTimeout(() => {\n                swal({\n                  icon: 'info',\n                  title: 'New update available.',\n                  button: {\n                    text: 'Get update!',\n                  },\n                }).then((getUpdate) => {\n                  if (getUpdate) {\n                    const win = window.open(window.location.href, '_blank');\n                    win.focus();\n                  }\n                });\n                // window.location.reload(true);\n                // const win = window.open(window.location.href, '_blank');\n                // win.focus();\n              }, 200);\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/Users/permindersingh/Projects/reviews-system/app/src/utils/sentry.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/utils/apolloClient.js",["405"],"import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { setContext } from '@apollo/client/link/context';\nimport { createHttpLink } from '@apollo/client/link/http';\nimport fetch from 'isomorphic-fetch';\n\nimport config from './config';\nimport sentry from './sentry';\n\nconst httpLink = createHttpLink({\n  uri: config.debug ? config.graphQlUriDev : config.graphQlUri,\n  fetch,\n});\n\nconst authLink = setContext(async (_, { headers }) => {\n  const token = process.browser\n    ? window.localStorage.getItem('token')\n    : undefined;\n\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token || '',\n    },\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  // console.log('onError', graphQLErrors, networkError);\n  if (config.debug) {\n    console.log('onError', graphQLErrors, networkError);\n    return;\n  }\n\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, locations, path }) =>\n      sentry.captureException(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    );\n\n  if (networkError) sentry.captureException(`[Network error]: ${networkError}`);\n});\n\nconst client = new ApolloClient({\n  link: errorLink.concat(authLink.concat(httpLink)),\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","/Users/permindersingh/Projects/reviews-system/app/src/utils/theme.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/utils/routes.js",["406","407"],"import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { useStoreState } from 'easy-peasy';\nimport { GlobalStyle } from './theme';\n\nimport Home from '../pages/Home';\nimport Error404 from '../pages/404';\nimport NotAllowed from '../pages/NotAllowed';\nimport About from '../pages/About';\nimport Contact from '../pages/Contact';\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport ForgotPassword from '../pages/ForgotPassword';\nimport SetPassword from '../pages/SetPassword';\nimport Test from '../pages/Test';\n\nimport DashboardSuperAdmin from '../pages/super-admin/Dashboard';\nimport Discounts from '../pages/super-admin/Discounts';\nimport ClientProjects from '../pages/super-admin/ClientProjects';\nimport ProjectInfo from '../pages/super-admin/ProjectInfo';\nimport Pricing from '../pages/super-admin/Pricing';\nimport HelpSuperAdmin from '../pages/super-admin/Help';\n\nimport DashboardAdmin from '../pages/admin/Dashboard';\nimport CreateProject from '../pages/admin/CreateProject';\nimport ProjectDashboard from '../pages/admin/ProjectDashboard';\nimport Help from '../pages/admin/Help';\nimport ProjectSetting from '../pages/admin/ProjectSetting';\nimport ProjectSubscription from '../pages/admin/ProjectSubscription';\nimport Settings from '../pages/admin/Settings';\n\nconst PrivateRoute = ({ component: Component, access, ...rest }) => {\n  const isLoggedIn = useStoreState((state) => state.isLoggedIn.value);\n  const user = useStoreState((state) => state.user.data);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isLoggedIn) {\n          return <Redirect to=\"/login\" />;\n        }\n        if (access !== user.type) {\n          return <Redirect to=\"/not-allowed\" />;\n        }\n        return <Component {...props} />;\n      }}\n    />\n  );\n};\n\nconst Routes = () => (\n  <>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/register/:projectId/:email\" component={Register} />\n        <Route exact path=\"/set-password/:token\" component={SetPassword} />\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n        <Route exact path=\"/not-allowed\" component={NotAllowed} />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/dashboard\"\n          component={DashboardSuperAdmin}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/help\"\n          component={HelpSuperAdmin}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/client/:clientId/projects\"\n          component={ClientProjects}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/client/:clientId/project/:projectId/info\"\n          component={ProjectInfo}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/pricing\"\n          component={Pricing}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/super-admin/discounts\"\n          component={Discounts}\n          access=\"superAdmin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/dashboard\"\n          component={DashboardAdmin}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/project/create\"\n          component={CreateProject}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/project/:id/pages\"\n          component={ProjectDashboard}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/help\"\n          component={Help}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/project/:id/settings\"\n          component={ProjectSetting}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/project/:id/subscription\"\n          component={ProjectSubscription}\n          access=\"admin\"\n        />\n        <PrivateRoute\n          exact\n          path=\"/admin/settings\"\n          component={Settings}\n          access=\"admin\"\n        />\n        <Route exact path=\"/test\" component={Test} />\n        <Route component={Error404} />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default Routes;\n","/Users/permindersingh/Projects/reviews-system/app/src/utils/config.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/store/index.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/elements/index.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/Home.js",["408"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\n\nconst Home = () => {\n  return (\n    <Layout>\n      <Seo title=\"Home\" description=\"Some description here.\" />\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"header\">Intellishare</h1>\n          <br />\n          <Link to=\"/login\">Login</Link>\n          <br />\n          <Link to=\"/register\">Register</Link>\n          <br />\n          <Link to=\"/forgot-password\">Forgot Password</Link>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/About.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/SetPassword.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/Login.js",["409","410","411","412","413","414","415"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nimport Seo from '../components/Seo';\nimport Layout from '../components/Layout';\nimport { Message, Loading } from '../components/elements';\nimport LoginForm from '../components/LoginForm';\nimport background from '../assets/images/intelliback.jpg';\nimport logo from '../assets/images/logo2.png';\n\nconst mutation = gql`\n  mutation login($email: String!, $password: String!) {\n    login(input: { email: $email, password: $password }) {\n      jwt\n      user {\n        id\n        email\n        type\n      }\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .login-page {\n    width: 52%;\n    margin-right: auto;\n    margin-left: auto;\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n    }\n  }\n  .hero-body {\n    align-items: flex-start !important;\n    padding: 0 !important;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  h2 {\n    font-size: ${props => props.theme.fontSizeSuperLarge};\n    margin-bottom: 2rem;\n  }\n`;\n\nconst FormContainer = styled.div`\n  padding: 0 3rem;\n  .navbar-item {\n    display: grid;\n  }\n  h1 {\n    font-size: 2.3rem;\n    margin-top: -1rem;\n  }\n`;\n\nconst Logo = styled.img`\n  max-height: 60px;\n  width: auto;\n  padding-bottom: 1rem;\n`;\n\nconst Login = () => {\n  const [executeMutation, res] = useMutation(mutation);\n  const togggleLoggedIn = useStoreActions(\n    actions => actions.isLoggedIn.togggle,\n  );\n  const updateUser = useStoreActions(actions => actions.user.update);\n  const activeProject = useStoreState(state => state.origin.project);\n\n  if (res.data && res.data.login) {\n    const { jwt, user } = res.data.login;\n    window.localStorage.setItem('token', jwt);\n    togggleLoggedIn(true);\n    updateUser(user);\n    setTimeout(() => {\n      let sendTo = '/client/dashboard';\n      if (user.type === 'superAdmin') {\n        sendTo = '/super-admin/dashboard';\n      } else if (user.type === 'admin') {\n        sendTo = '/admin/dashboard';\n      }\n      window.location.replace(sendTo);\n    }, 1000);\n  }\n\n  return (\n    <Layout noContainer hasAuthNav activeProject={activeProject}>\n      <Container>\n        <div className=\"login-page\">\n          <Seo title=\"Login\" description=\"Some description here.\" />\n          <section className=\"hero is-fullheight\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <FormContainer>\n                  <div>\n                    <nav\n                      className=\"navbar\"\n                      role=\"navigation\"\n                      aria-label=\"main navigation\">\n                      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                        <div className=\"endnavbar-\">\n                          {/* <div className=\"navbar-item has-text-black-bis has-text-right\">\n                            {activeProject.name && (\n                              <h1 className=\"has-text-weight-bold\">\n                                {activeProject.name}\n                              </h1>\n                            )}\n                          </div> */}\n                        </div>\n                      </div>\n                    </nav>\n\n                    {activeProject.logo ? (\n                      <Logo src={activeProject.logo} alt={activeProject.name} />\n                    ) : (\n                      <Logo src={logo} alt=\"Intellishare\" />\n                    )}\n                    <ContentContainer>\n                      <h2 className=\"has-text-weight-semibold is-size-5-mobile\">\n                        Log In\n                      </h2>\n                    </ContentContainer>\n                  </div>\n                  <LoginForm\n                    onSubmit={data => executeMutation({ variables: data })}\n                  />\n                  {res.error && (\n                    <Message type=\"error\">{res.error.message}</Message>\n                  )}\n                  {res.loading ? <Loading /> : null}\n                </FormContainer>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Login;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/404.js",["416"],"import React from 'react';\n\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\n\nconst Error404 = () => {\n  return (\n    <Layout>\n      <Seo title=\"404 not found\" description=\"Page not found\" />\n      <div className=\"section\">\n        <div className=\"container\">\n          <h2 className=\"title\">404</h2>\n          <p>The page you are looking for, could not be found.</p>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Error404;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Pricing.js",["417","418","419","420","421","422"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\nimport { isEmpty } from 'lodash';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport {\n  Heading,\n  Title,\n  Message,\n  Loading,\n  Button,\n} from '../../components/elements';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport MainColumn from '../../components/MainColumn';\nimport CopyRight from '../../components/CopyRight';\nimport PricingForm from '../../components/PricingForm';\n\nconst pricingsQuery = gql`\n  {\n    packages {\n      id\n      name\n      price\n      durationInMonths\n    }\n  }\n`;\n\nconst pricingMutation = gql`\n  mutation createPackage(\n    $name: String!\n    $durationInMonths: Int!\n    $price: Float!\n  ) {\n    createPackage(\n      input: { name: $name, durationInMonths: $durationInMonths, price: $price }\n    ) {\n      id\n      name\n      price\n    }\n  }\n`;\n\nconst updatePackageMutation = gql`\n  mutation updatePackage($id: ID!, $input: PackageInput!) {\n    updatePackage(id: $id, input: $input) {\n      id\n      name\n      price\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .pound-icon {\n    font-size: 0.85rem !important;\n  }\n  input {\n    border-radius: 0px;\n    border: 1px solid ${props => props.theme.primaryColor};\n  }\n`;\n\nconst Pricing = () => {\n  const result = useQuery(pricingsQuery, { fetchPolicy: 'cache-and-network' });\n  const [executeMutation, res] = useMutation(pricingMutation);\n  const [executeMutationEdit, resEdit] = useMutation(updatePackageMutation);\n  const [editClient, setEditClient] = useState({});\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Projects Pricing\" description=\"Setup Subscription Plans\" />\n      <Header />\n      <Container className=\"columns\">\n        <div className=\"column\">\n          <Sidebar />\n        </div>\n        <div className=\"column is-four-fifths\">\n          <MainColumn>\n            <Heading>Set Pricing</Heading>\n            <PricingForm\n              enableReinitialize\n              initialValues={editClient}\n              onSubmit={data => {\n                if (isEmpty(editClient)) {\n                  // add item\n                  setTimeout(() => {\n                    swal('Item created successfully!');\n                    result.refetch();\n                  }, 3000);\n                  return executeMutation({ variables: data });\n                }\n                // edit item\n                const editItem = editClient;\n                setTimeout(() => {\n                  swal('Item updated successfully!');\n                  result.refetch();\n                  setEditClient({});\n                }, 3000);\n                return executeMutationEdit({\n                  variables: { id: editItem.id, input: data },\n                });\n              }}\n            />\n            {res.error && <Message type=\"error\">{res.error.message}</Message>}\n            {/* {resRemove.error && (\n              <Message type=\"error\">{resRemove.error.message}</Message>\n            )} */}\n            {resEdit.error && (\n              <Message type=\"error\">{resEdit.error.message}</Message>\n            )}\n            {res.loading || result.loading || resEdit.loading ? (\n              <Loading />\n            ) : null}\n            {result.data && result.data.packages && (\n              <React.Fragment>\n                <Title marginTop=\"4rem\">Plans</Title>\n                <table className=\"table is-fullwidth is-hoverable\">\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Price</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {result.data.packages.map(item => (\n                      <tr key={item.id}>\n                        <td>{item.name}</td>\n                        <td>£{item.price}</td>\n                        <td className=\"is-uppercase actions has-text-right\">\n                          <Button\n                            primary\n                            paddingless\n                            onClick={() => setEditClient(item)}>\n                            EDIT\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </React.Fragment>\n            )}\n          </MainColumn>\n        </div>\n      </Container>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default Pricing;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Help.js",["423","424","425","426","427"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport { Heading, Message, Loading, Button } from '../../components/elements';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport MainColumn from '../../components/MainColumn';\nimport CopyRight from '../../components/CopyRight';\nimport HelpForm from '../../components/HelpForm';\n\nconst supportQuery = gql`\n  {\n    support {\n      id\n      name\n      embedCode\n    }\n  }\n`;\n\nconst createSupportMutation = gql`\n  mutation createSupport($input: SupportInput!) {\n    createSupport(input: $input) {\n      name\n      embedCode\n    }\n  }\n`;\n\nconst removeSupportMutation = gql`\n  mutation removeSupport($id: ID!) {\n    removeSupport(id: $id) {\n      success\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .pound-icon {\n    font-size: 0.85rem !important;\n  }\n  input {\n    border-radius: 0px;\n    border: 1px solid ${props => props.theme.primaryColor};\n  }\n`;\n\nconst HelpSuperAdmin = () => {\n  const result = useQuery(supportQuery, { fetchPolicy: 'cache-and-network' });\n  const [executeMutation, res] = useMutation(createSupportMutation);\n  const [executeMutationRemove, resRemove] = useMutation(removeSupportMutation);\n\n  return (\n    <Layout noContainer>\n      <Seo\n        title=\"Manage Help Super Admin\"\n        description=\"Provide Videos for Help\"\n      />\n      <Header />\n      <Container className=\"columns\">\n        <div className=\"column\">\n          <Sidebar />\n        </div>\n        <div className=\"column is-four-fifths\">\n          <MainColumn>\n            <Heading>Manage Help</Heading>\n            <HelpForm\n              onSubmit={async data => {\n                await executeMutation({ variables: { input: data } });\n                result.refetch();\n              }}\n            />\n            {res.error && <Message type=\"error\">{res.error.message}</Message>}\n            {resRemove.error && (\n              <Message type=\"error\">{resRemove.error.message}</Message>\n            )}\n            {res.loading || result.loading || resRemove.loading ? (\n              <Loading />\n            ) : null}\n            {result.data && result.data.support && (\n              <React.Fragment>\n                {/* <Title marginTop=\"4rem\">Videos</Title> */}\n                <table className=\"table is-fullwidth is-hoverable\">\n                  <thead>\n                    <tr>\n                      <th>Title</th>\n                      <th className=\"has-text-right\">Delete</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {result.data.support.map(item => (\n                      <tr key={item.id}>\n                        <td>{item.name}</td>\n                        <td className=\"is-uppercase actions has-text-right\">\n                          <Button\n                            primary\n                            paddingless\n                            onClick={() => {\n                              swal('Are you confirm to delete this item?', {\n                                buttons: ['Cancel', 'Confirm'],\n                              }).then(async value => {\n                                if (value) {\n                                  await executeMutationRemove({\n                                    variables: { id: item.id },\n                                  });\n                                  result.refetch();\n                                }\n                              });\n                            }}>\n                            DELETE\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </React.Fragment>\n            )}\n          </MainColumn>\n        </div>\n      </Container>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default HelpSuperAdmin;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/ForgotPassword.js",["428","429","430","431","432","433","434","435"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\nimport { isEmpty } from 'lodash';\n\nimport useProjectGuestDetails from '../hooks/useProjectGuestDetails';\nimport Seo from '../components/Seo';\nimport Layout from '../components/Layout';\nimport { Message } from '../components/elements';\nimport ForgotPasswordForm from '../components/ForgotPasswordForm';\nimport logo from '../assets/images/logo2.png';\n\nconst forgotPasswordMutation = gql`\n  mutation forgotPassword($input: ForgotPasswordInput!) {\n    forgotPassword(input: $input) {\n      success\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .forgot-password-page {\n    width: 52%;\n    margin-right: auto;\n    margin-left: auto;\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n    }\n  }\n  .hero-body {\n    align-items: flex-start !important;\n    padding: 0 !important;\n  }\n  .navbar {\n    min-height: 1.25rem;\n  }\n`;\n\nconst FormContainer = styled.div`\n  padding: 0 3rem;\n  margin-top: 2rem;\n  .navbar-item {\n    display: grid;\n  }\n  h1 {\n    font-size: 2.3rem;\n    margin-top: -1rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  padding-bottom: 2rem;\n  h2 {\n    font-size: ${props => props.theme.fontSizeSuperLarge};\n  }\n  p {\n    margin: 2rem 0;\n  }\n  a {\n    :hover {\n      color: ${props => props.theme.primaryColor};\n    }\n  }\n  .project {\n    padding-right: 5px;\n  }\n`;\n\nconst Logo = styled.img`\n  max-height: 60px;\n  width: auto;\n  padding-bottom: 1rem;\n`;\n\nconst ForgotPassword = ({ match }) => {\n  const [executeMutation, res] = useMutation(forgotPasswordMutation);\n  const updateProject = useStoreActions(\n    actions => actions.origin.updateProject,\n  );\n  const activeProject = useStoreState(state => state.origin.project);\n  const { projectId, email } = match.params;\n\n  // fetch project data from api\n  const [project] = useProjectGuestDetails({ projectId });\n\n  useEffect(() => {\n    if (!isEmpty(project)) {\n      updateProject(project);\n    }\n  }, [project]);\n\n  // console.log(activeProject, 'activeProject');\n\n  return (\n    <Layout noContainer hasAuthNav activeProject={activeProject}>\n      <Container>\n        <div className=\"forgot-password-page\">\n          <Seo title=\"Forgot Password\" />\n          <section className=\"hero is-fullheight\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <FormContainer>\n                  <div>\n                    <nav\n                      className=\"navbar\"\n                      role=\"navigation\"\n                      aria-label=\"main navigation\">\n                      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                        <div className=\"navbar-end\">\n                          {/* <div className=\"navbar-item has-text-black-bis has-text-right\">\n                            {activeProject.name && (\n                              <h3 className=\"has-text-weight-bold is-size-3\">\n                                {activeProject.name}\n                              </h3>\n                            )}\n                          </div> */}\n                        </div>\n                      </div>\n                    </nav>\n                    {activeProject.logo ? (\n                      <Logo src={activeProject.logo} alt={activeProject.name} />\n                    ) : (\n                      <Logo src={logo} alt=\"Intellishare\" />\n                    )}\n                    <ContentContainer className=\"is-flex\">\n                      {activeProject.name && (\n                        <h2 className=\"has-text-weight-semibold is-size-5-mobile project\">\n                          {activeProject.name}\n                        </h2>\n                      )}{' '}\n                      <h2 className=\"has-text-weight-semibold is-size-5-mobile\">\n                        Reset Password\n                      </h2>\n                      {/* <p className=\"is-size-6\">\n                        Enter the email address associated with your account and\n                        we&apos;ll send you a link to reset your password.\n                      </p> */}\n                    </ContentContainer>\n                  </div>\n                  <ForgotPasswordForm\n                    onSubmit={async data => {\n                      await executeMutation({ variables: { input: data } });\n                      swal('An email has been sent, please check your Inbox');\n                    }}\n                  />\n                  {res.error && (\n                    <Message type=\"error\">{res.error.message}</Message>\n                  )}\n                </FormContainer>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default ForgotPassword;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Dashboard.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/Contact.js",["436"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport { Message } from '../components/elements';\nimport Layout from '../components/Layout';\nimport ContactForm from '../components/ContactForm';\n\n// TODO: attach when data available\n\nconst contactMutation = gql`\n  mutation contact($name: String!, $email: String!, $message: String!) {\n    contact(input: { name: $name, email: $email, message: $message }) {\n      id\n      name\n      email\n      message\n    }\n  }\n`;\nconst Contact = () => {\n  const [executeMutation, res] = useMutation(contactMutation);\n\n  return (\n    <Layout>\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Contact</h1>\n          <ContactForm\n            onSubmit={data => executeMutation({ variables: data })}\n          />\n          {res.error && <Message type=\"error\">{res.error.message}</Message>}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Contact;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/Test.js",["437"],"import React from 'react';\n\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\n\nconst Test = () => {\n  return (\n    <Layout>\n      <Seo title=\"Test\" description=\"Some description here.\" />\n      <div className=\"container\">\n        <h1>Test page</h1>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Test;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Dashboard.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/CreateProject.js",["438","439","440"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { find, toString } from 'lodash';\nimport { useStoreActions } from 'easy-peasy';\n\nimport Seo from '../../components/Seo';\nimport Layout from '../../components/Layout';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport CopyRight from '../../components/CopyRight';\nimport PaymentForm from '../../components/PaymentForm';\nimport PaymentConfirmation from '../../components/PaymentConfirmation';\nimport ProgressBar from '../../components/ProgressBar';\nimport MainColumn from '../../components/MainColumn';\nimport ProjectSetupForm from '../../components/ProjectSetupForm';\nimport { Title, Message, Loading } from '../../components/elements';\n\nconst packagesQuery = gql`\n  query packages {\n    packages {\n      id\n      subscriptionPlanId\n      name\n      durationInMonths\n      price\n    }\n  }\n`;\n\nconst createProjectMutation = gql`\n  mutation createProject(\n    $name: String!\n    $slug: String!\n    $customDomain: String!\n    $subscriptionPlanId: String!\n    $billingAddress: Address!\n    $card: Card!\n    $couponCode: String\n  ) {\n    createProject(\n      input: {\n        name: $name\n        slug: $slug\n        customDomain: $customDomain\n        subscriptionPlanId: $subscriptionPlanId\n        billingAddress: $billingAddress\n        card: $card\n        couponCode: $couponCode\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nconst CreateProject = () => {\n  const [activeStep, setActiveStep] = useState({\n    stepOne: true,\n    stepTwo: false,\n    stepThree: false,\n  });\n  const [project, setProject] = useState({});\n  const [subscription, setSubscription] = useState({});\n\n  const packagesData = useQuery(packagesQuery, {\n    fetchPolicy: 'network-only',\n  });\n  const { packages } = packagesData.data || {};\n  const [executeMutationAdd, resAdd] = useMutation(createProjectMutation);\n  const updateProject = useStoreActions(\n    actions => actions.active.updateProject,\n  );\n\n  useEffect(() => {\n    updateProject(null);\n  }, []);\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Create Project\" description=\"Create New Project\" />\n      <Header />\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar />\n        </div>\n        <div className=\"column\">\n          <MainColumn>\n            <ProgressBar activeStep={activeStep} />\n            {activeStep.stepOne &&\n              !activeStep.stepTwo &&\n              !activeStep.stepThree && (\n                <div className=\"column is-half\">\n                  <Title>01 Project Setup</Title>\n                  <ProjectSetupForm\n                    packages={packages}\n                    onSubmit={data => {\n                      setProject(data);\n                      const selectedSubscription = find(packages, {\n                        subscriptionPlanId: data.subscriptionPlanId,\n                      });\n                      setSubscription(selectedSubscription);\n                      setActiveStep({ ...activeStep, stepTwo: true });\n                    }}\n                  />\n                </div>\n              )}\n            {activeStep.stepOne && activeStep.stepTwo && !activeStep.stepThree && (\n              <div className=\"column\">\n                <Title>02 Payment</Title>\n                <PaymentForm\n                  enableReinitialize\n                  initialValues={project}\n                  subscription={subscription}\n                  onSubmit={async data => {\n                    const card = {\n                      number: toString(data.paymentCardNumber),\n                      expMonth: toString(data.paymentCardExpiryMonth),\n                      expYear: toString(data.paymentCardExpiryYear),\n                      cvc: toString(data.paymentCardCvv),\n                    };\n\n                    const inputData = {\n                      ...project,\n                      card,\n                      billingAddress: {\n                        country: data.country,\n                        addressLine1: data.addressLine1,\n                        addressLine2: data.addressLine2,\n                        city: data.city,\n                        state: data.state,\n                        postcode: toString(data.postcode),\n                      },\n                    };\n\n                    // send success data to server\n                    const projectCreated = await executeMutationAdd({\n                      variables: inputData,\n                    });\n                    if (projectCreated.data.createProject) {\n                      setProject(projectCreated.data.createProject);\n                      setActiveStep({ ...activeStep, stepThree: true });\n                    }\n                  }}\n                />\n              </div>\n            )}\n            {activeStep.stepOne &&\n              activeStep.stepTwo &&\n              activeStep.stepThree && <PaymentConfirmation project={project} />}\n            {resAdd.error && (\n              <Message type=\"error\">{resAdd.error.message}</Message>\n            )}\n            {resAdd.loading ? <Loading /> : null}\n          </MainColumn>\n        </div>\n      </div>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default CreateProject;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/ClientProjects.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectSubscription.js",["441","442","443"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\n\nimport useProjectDetails from '../../hooks/useProjectDetails';\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport CopyRight from '../../components/CopyRight';\nimport MainColumn from '../../components/MainColumn';\nimport { Message, Loading, Button, Heading } from '../../components/elements';\nimport AdminHeader from '../../components/AdminHeader';\nimport AdminSubHeader from '../../components/AdminSubHeader';\n// import Subscription from '../../components/Subscription';\n\nconst removeProjectMutation = gql`\n  mutation removeProject($id: ID!) {\n    removeProject(id: $id) {\n      success\n    }\n  }\n`;\n\nconst Wrapper = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst ProjectSubscription = ({ match, history }) => {\n  const projectId = match.params.id;\n  const [project] = useProjectDetails(projectId);\n  const [executeMutationRemove, resRemove] = useMutation(removeProjectMutation);\n\n  return (\n    <Layout noContainer>\n      <Seo\n        title=\"Project Subscription\"\n        description=\"Manage Subscription of Projects\"\n      />\n      <Header />\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar />\n        </div>\n        <div className=\"column\">\n          <AdminHeader />\n          <AdminSubHeader />\n          <MainColumn>\n            <Heading>Subscriptions</Heading>\n            {/* <Subscription project={project} /> */}\n            {/* <Heading>Cancel subscription?</Heading> */}\n            <p className=\"is-size-5\">\n              To cancel your subscription please click the &apos;\n              <span className=\"has-text-weight-semibold\">Delete Project</span>\n              &rsquo; button below\n            </p>\n            <Wrapper className=\"is-size-5\">\n              This will permanently delete your project.\n            </Wrapper>\n            <Button\n              onClick={() => {\n                swal(\n                  'Are you confirm to cancel subscription of this project?',\n                  {\n                    buttons: ['Cancel', 'Confirm'],\n                  },\n                ).then(async (value) => {\n                  if (value) {\n                    const response = await executeMutationRemove({\n                      variables: { id: project.id },\n                    });\n                    if (response.data.removeProject || !resRemove.loading) {\n                      history.push('/admin/dashboard');\n                    }\n                  }\n                });\n              }}\n            >\n              Delete Project\n            </Button>\n            {resRemove.error && (\n              <Message type=\"error\">{resRemove.error.message}</Message>\n            )}\n            {resRemove.loading ? <Loading /> : null}\n          </MainColumn>\n        </div>\n      </div>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default ProjectSubscription;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectSetting.js",["444","445","446","447","448"],"import React from 'react';\nimport swal from 'sweetalert';\nimport styled from 'styled-components';\n\nimport useProjectDetails from '../../hooks/useProjectDetails';\nimport useProjectUpdate from '../../hooks/useProjectUpdate';\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport CopyRight from '../../components/CopyRight';\nimport MainColumn from '../../components/MainColumn';\nimport { Heading, Message, Loading } from '../../components/elements';\nimport AdminHeader from '../../components/AdminHeader';\nimport AdminSubHeader from '../../components/AdminSubHeader';\nimport ProjectSettingForm from '../../components/ProjectSettingForm';\n\nconst FormContainer = styled.div`\n  margin-top: -70px;\n  .disclaimer-note {\n    margin-bottom: 12px;\n    margin-top: -22px;\n  }\n`;\n\nconst ProjectSetting = ({ match }) => {\n  const projectId = match.params.id;\n  const [project] = useProjectDetails(projectId);\n  const [executeMutation, res] = useProjectUpdate();\n\n  return (\n    <Layout noContainer>\n      <Seo\n        title=\"Footer Contact Information\"\n        description=\"Update Existing Projects\"\n      />\n      <Header />\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar />\n        </div>\n        <div className=\"column\">\n          <AdminHeader />\n          <AdminSubHeader />\n          <MainColumn>\n            <Heading>Project Settings</Heading>\n            <FormContainer>\n              <ProjectSettingForm\n                enableReinitialize\n                initialValues={project}\n                onSubmit={async data => {\n                  await executeMutation({\n                    variables: { id: project.id, input: data },\n                  });\n                  swal('Project Settings updated').then(() =>\n                    window.location.reload(),\n                  );\n                }}\n              />\n            </FormContainer>\n            {res.error && <Message type=\"error\">{res.error.message}</Message>}\n            {res.loading ? <Loading /> : null}\n          </MainColumn>\n        </div>\n      </div>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default ProjectSetting;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Help.js",["449","450"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport { Heading, Subtitle } from '../../components/elements';\nimport MainColumn from '../../components/MainColumn';\nimport CopyRight from '../../components/CopyRight';\n\nconst helpQuery = gql`\n  query support {\n    support {\n      id\n      name\n      embedCode\n    }\n  }\n`;\n\nconst Help = () => {\n  const supportData = useQuery(helpQuery, {\n    fetchPolicy: 'network-only',\n  });\n  const support = supportData.data ? supportData.data.support : [];\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Help\" description=\"Manage Help Content\" />\n      <Header />\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar />\n        </div>\n        <div className=\"column\">\n          <MainColumn>\n            <Heading>Help</Heading>\n            <div className=\"columns\">\n              {support.map(item => (\n                <div className=\"column\" key={item.id}>\n                  <Subtitle>{item.name}</Subtitle>\n                  <section\n                    dangerouslySetInnerHTML={{ __html: item.embedCode }}\n                  />\n                </div>\n              ))}\n            </div>\n          </MainColumn>\n        </div>\n      </div>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default Help;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/Discounts.js",["451","452","453","454","455"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport {\n  Heading,\n  Title,\n  Button,\n  Message,\n  Loading,\n} from '../../components/elements';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport MainColumn from '../../components/MainColumn';\nimport CopyRight from '../../components/CopyRight';\nimport DiscountForm from '../../components/DiscountForm';\n\nconst discountsQuery = gql`\n  {\n    discounts {\n      id\n      name\n      code\n      percentage\n    }\n  }\n`;\n\nconst createDiscountMutation = gql`\n  mutation createDiscount($name: String!, $percentage: Int!, $code: String!) {\n    createDiscount(\n      input: { name: $name, percentage: $percentage, code: $code }\n    ) {\n      id\n      name\n      percentage\n      code\n    }\n  }\n`;\n\nconst removeDiscountMutation = gql`\n  mutation removeDiscount($id: ID!) {\n    removeDiscount(id: $id) {\n      success\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .pound-icon {\n    font-size: 0.85rem !important;\n  }\n  td.actions {\n    color: ${props => props.theme.primaryColor};\n  }\n  input {\n    border-radius: 0px;\n    border: 1px solid ${props => props.theme.primaryColor};\n  }\n`;\n\nconst Discounts = () => {\n  const result = useQuery(discountsQuery, { fetchPolicy: 'cache-and-network' });\n  const [executeMutationAdd, resAdd] = useMutation(createDiscountMutation);\n  const [executeMutationRemove, resRemove] = useMutation(\n    removeDiscountMutation,\n  );\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Discount Code\" description=\"Create Discount Codes\" />\n      <Header />\n      <Container className=\"columns\">\n        <div className=\"column\">\n          <Sidebar />\n        </div>\n        <div className=\"column is-four-fifths\">\n          <MainColumn>\n            <Heading>Discount Codes</Heading>\n            <Title>Create Discount Code</Title>\n            <DiscountForm\n              onSubmit={async data => {\n                await executeMutationAdd({ variables: data });\n                result.refetch();\n              }}\n            />\n            {resAdd.error && (\n              <Message type=\"error\">{resAdd.error.message}</Message>\n            )}\n            {resRemove.error && (\n              <Message type=\"error\">{resRemove.error.message}</Message>\n            )}\n            {result.error && (\n              <Message type=\"error\">{result.error.message}</Message>\n            )}\n            {resAdd.loading || resRemove.loading || result.loading ? (\n              <Loading />\n            ) : null}\n            {result.data && result.data.discounts.length > 0 && (\n              <table className=\"table is-fullwidth is-hoverable\">\n                <thead>\n                  <tr>\n                    <th className=\"has-text-left\">Code</th>\n                    <th className=\"has-text-left\">Percentage</th>\n                    <th className=\"has-text-right\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {result.data.discounts.map(item => (\n                    <tr key={item.id}>\n                      <td>{item.code}</td>\n                      <td>{item.percentage}%</td>\n                      <td className=\"has-text-right\">\n                        <Button\n                          primary\n                          paddingless\n                          onClick={() => {\n                            swal('Are you confirm to delete this item?', {\n                              buttons: ['Cancel', 'Confirm'],\n                            }).then(async value => {\n                              if (value) {\n                                await executeMutationRemove({\n                                  variables: { id: item.id },\n                                });\n                                result.refetch();\n                              }\n                            });\n                          }}>\n                          DELETE\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </MainColumn>\n        </div>\n      </Container>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default Discounts;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/Settings.js",["456"],"import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport CopyRight from '../../components/CopyRight';\nimport MainColumn from '../../components/MainColumn';\nimport { Heading, Message, Loading } from '../../components/elements';\nimport SettingsForm from '../../components/SettingsForm';\n\nconst meQuery = gql`\n  query me {\n    me {\n      id\n      email\n      profile {\n        fullName\n        companyName\n        telephone\n      }\n    }\n  }\n`;\n\nconst settingMutation = gql`\n  mutation updateMe($input: UpdateUserInput!) {\n    updateMe(input: $input) {\n      id\n      email\n      profile {\n        fullName\n        companyName\n        telephone\n      }\n    }\n  }\n`;\n\nconst Settings = () => {\n  const meData = useQuery(meQuery, { fetchPolicy: 'cache-and-network' });\n  const [executeMutation, res] = useMutation(settingMutation);\n  const me = meData.data ? meData.data.me : {};\n  // console.log('res', me);\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Settings\" description=\"Update User info\" />\n      <Header />\n      <div className=\"columns\">\n        <div className=\"column is-one-fifth\">\n          <Sidebar />\n        </div>\n        <div className=\"column\">\n          <MainColumn paddingtop=\"1rem\">\n            <Heading>Settings</Heading>\n            <div>\n              <SettingsForm\n                enableReinitialize\n                initialValues={me}\n                onSubmit={async data => {\n                  await executeMutation({ variables: { input: data } });\n                  swal('Settings updated');\n                }}\n              />\n            </div>\n            {res.error && <Message type=\"error\">{res.error.message}</Message>}\n            {res.loading ? <Loading /> : null}\n          </MainColumn>\n        </div>\n      </div>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default Settings;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/admin/ProjectDashboard.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/pages/Register.js",["457","458","459","460","461","462","463","464","465","466"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { isEmpty } from 'lodash';\n\nimport useProjectGuestDetails from '../hooks/useProjectGuestDetails';\nimport Seo from '../components/Seo';\nimport Layout from '../components/Layout';\nimport { Message, Loading } from '../components/elements';\nimport RegisterForm from '../components/RegisterForm';\nimport logo from '../assets/images/logo2.png';\n\nconst registerMutation = gql`\n  mutation register($input: RegisterInput) {\n    register(input: $input) {\n      jwt\n      user {\n        id\n        email\n        type\n      }\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .register-page {\n    width: 52%;\n    margin-right: auto;\n    margin-left: auto;\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n    }\n  }\n  .hero-body {\n    align-items: flex-start !important;\n    padding: 0 !important;\n  }\n`;\n\nconst FormContainer = styled.div`\n  padding: 0 3rem;\n  margin-top: 2rem;\n  .navbar-item {\n    display: grid;\n  }\n  h1 {\n    font-size: 2.3rem;\n    margin-top: -1rem;\n  }\n  .navbar {\n    min-height: 1.25rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  h2 {\n    font-size: ${props => props.theme.fontSizeSuperLarge};\n  }\n  p {\n    margin: 2rem 0;\n  }\n  a {\n    :hover {\n      color: ${props => props.theme.primaryColor};\n    }\n  }\n`;\n\nconst Logo = styled.img`\n  max-height: 60px;\n  width: auto;\n  padding-bottom: 1rem;\n`;\n\nconst Register = ({ match }) => {\n  const [executeMutation, res] = useMutation(registerMutation);\n  const togggleLoggedIn = useStoreActions(\n    actions => actions.isLoggedIn.togggle,\n  );\n  const updateUser = useStoreActions(actions => actions.user.update);\n  const updateProject = useStoreActions(\n    actions => actions.origin.updateProject,\n  );\n  const activeProject = useStoreState(state => state.origin.project);\n  const { projectId, email } = match.params;\n  const isAdminRegister = !projectId;\n\n  // fetch project data from api\n  const [project] = useProjectGuestDetails({ projectId });\n\n  useEffect(() => {\n    if (!isEmpty(project)) {\n      updateProject(project);\n    }\n  }, [project]);\n\n  if (res.data && res.data.register) {\n    const { jwt, user } = res.data.register;\n    window.localStorage.setItem('token', jwt);\n    togggleLoggedIn(true);\n    updateUser(user);\n    setTimeout(() => {\n      window.location.replace(\n        isAdminRegister ? '/admin/dashboard' : '/client/dashboard',\n      );\n    }, 1000);\n  }\n\n  return (\n    <Layout noContainer hasAuthNav activeProject={activeProject}>\n      <Container>\n        <div className=\"register-page\">\n          <Seo title=\"Registration\" description=\"Register Yourself Here\" />\n          <section className=\"hero is-fullheight\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <FormContainer>\n                  <div>\n                    <nav\n                      className=\"navbar\"\n                      role=\"navigation\"\n                      aria-label=\"main navigation\">\n                      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                        <div className=\"navbar-end\">\n                          {/* <div className=\"navbar-item has-text-black-bis has-text-right\">\n                            {activeProject.name && (\n                              <h3 className=\"has-text-weight-bold is-size-3\">\n                                {activeProject.name}\n                              </h3>\n                            )}\n                          </div> */}\n                        </div>\n                      </div>\n                    </nav>\n                    {activeProject.logo ? (\n                      <Logo src={activeProject.logo} alt={activeProject.name} />\n                    ) : (\n                      <Logo src={logo} alt=\"Intellishare\" />\n                    )}\n                    <ContentContainer>\n                      <h2 className=\"has-text-weight-semibold is-size-5-mobile\">\n                        Create an Account\n                      </h2>\n                      <p className=\"is-size-6\">\n                        {/* Share your files and content and engage your clients. Do\n                        it all with Intellishare. Already have an account?{' '} */}\n                        {/* <a className=\"has-text-weight-bold\" href=\"/login\">\n                          Log in\n                        </a> */}\n                      </p>\n                    </ContentContainer>\n                  </div>\n                  <RegisterForm\n                    enableReinitialize\n                    initialValues={{\n                      email: email || '',\n                    }}\n                    onSubmit={data => {\n                      return executeMutation({\n                        variables: {\n                          input: {\n                            email: data.email,\n                            password: data.password,\n                            projectId: projectId || undefined,\n                            fullName: data.fullName,\n                            companyName: data.companyName,\n                            telephone: data.telephone,\n                          },\n                        },\n                      });\n                    }}\n                    project={activeProject}\n                    isAdminRegister={isAdminRegister}\n                  />\n                  {res.error && (\n                    <Message type=\"error\">{res.error.message}</Message>\n                  )}\n                  {res.loading ? <Loading /> : null}\n                </FormContainer>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Register;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/NotAllowed.js",["467"],"import React from 'react';\n\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\n\nconst NotAllowed = () => {\n  return (\n    <Layout>\n      <Seo title=\"Not Allowed\" description=\"You don't have permission\" />\n      <div className=\"section\">\n        <div className=\"container\">\n          <h2 className=\"title\">Not Allowed</h2>\n          <p>\n            The page you are looking for, is not allowed to be accessed by you.\n          </p>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NotAllowed;\n","/Users/permindersingh/Projects/reviews-system/app/src/pages/super-admin/ProjectInfo.js",["468","469"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport ProjectInfoForm from '../../components/ProjectInfoForm';\nimport { Heading, Title, Message, Loading } from '../../components/elements';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport MainColumn from '../../components/MainColumn';\nimport CopyRight from '../../components/CopyRight';\nimport AdminUsers from '../../components/AdminUsers';\n\nconst userQuery = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      id\n      email\n    }\n  }\n`;\n\nconst projectQuery = gql`\n  query project($id: ID!) {\n    project(id: $id) {\n      id\n      name\n      slug\n      customDomain\n      clients {\n        id\n        email\n        status\n        hasAccess\n        notifyStatus\n      }\n    }\n  }\n`;\n\nconst updateProjectMutation = gql`\n  mutation updateProject($id: ID!, $input: ProjectUpdateInput!) {\n    updateProject(id: $id, input: $input) {\n      id\n      name\n      slug\n      customDomain\n    }\n  }\n`;\n\nconst Container = styled.div`\n  .project-info {\n    margin-bottom: 3rem;\n  }\n  .modules {\n    margin-top: 4rem;\n  }\n  label {\n    color: ${(props) => props.theme.secondaryColor};\n  }\n`;\n\nconst ProjectInfo = ({ match }) => {\n  const resultUser = useQuery(userQuery, {\n    variables: { id: match.params.clientId },\n  });\n  const resultProject = useQuery(projectQuery, {\n    variables: { id: match.params.projectId },\n    fetchPolicy: 'cache-and-network',\n  });\n  const [executeMutation, res] = useMutation(updateProjectMutation);\n  const user = resultUser.data ? resultUser.data.user : {};\n  const project = resultProject.data ? resultProject.data.project : {};\n  // console.log('ProjectInfo', project);\n\n  return (\n    <Layout noContainer>\n      <Seo title=\"Project info\" description=\"Update User Project Info\" />\n      <Header />\n      <Container className=\"columns\">\n        <div className=\"column\">\n          <Sidebar />\n        </div>\n        <div className=\"column is-four-fifths\">\n          <MainColumn>\n            <Heading>\n              Users &gt; {user.email} &gt; {project.name}\n            </Heading>\n            <Title>Project Information</Title>\n            <div className=\"project-info\">\n              <ProjectInfoForm\n                enableReinitialize\n                initialValues={project}\n                onSubmit={(data) =>\n                  executeMutation({\n                    variables: {\n                      id: project.id,\n                      input: {\n                        name: data.name,\n                        slug: data.slug,\n                        customDomain: data.customDomain,\n                      },\n                    },\n                  })\n                }\n              />\n              {res.error && <Message type=\"error\">{res.error.message}</Message>}\n              {res.loading ? <Loading /> : null}\n            </div>\n            <AdminUsers\n              result={resultProject}\n              executeQuery={resultProject.refetch}\n            />\n          </MainColumn>\n        </div>\n      </Container>\n      <CopyRight />\n    </Layout>\n  );\n};\n\nexport default ProjectInfo;\n","/Users/permindersingh/Projects/reviews-system/app/src/store/schema.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/elements/InputGroup.js",["470","471","472","473","474","475","476","477","478"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Group = styled.div`\n  width: ${props => (props.groupWidth ? '100%' : '')};\n  .control {\n    width: ${props => (props.fullWidth ? '100%' : '')} !important;\n  }\n  label {\n    width: ${props => (props.isWidth ? '10rem' : '7.90rem')} !important;\n    align-self: flex-end;\n  }\n`;\n\nconst Input = styled.input`\n  box-shadow: none;\n  border-top: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-left: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-right: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-top-right-radius: 7px !important;\n  border-top-left-radius: 7px !important;\n  border-radius: ${props => (props.hasRadius ? '5px' : '0')};\n  border-bottom: ${props => `1px solid ${props.theme.borderColor}`};\n`;\n\nconst IconContainer = styled.div`\n  margin-left: 15px;\n  .tooltiptext {\n    visibility: hidden;\n    width: 180px;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 0;\n    position: absolute;\n    z-index: 1;\n  }\n  :hover .tooltiptext {\n    visibility: visible;\n  }\n`;\n\nconst InputGroup = ({\n  label,\n  errors,\n  fullWidth,\n  isWidth,\n  isHorizontal,\n  hasAddons,\n  children,\n  infoIcon,\n  iconLabel,\n  groupWidth,\n  ...otherProps\n}) => (\n  <Group\n    className={`field ${isHorizontal ? 'is-horizontal' : ''} ${\n      hasAddons ? 'has-addons' : ''\n    }`}\n    groupWidth={groupWidth}\n    fullWidth={fullWidth}\n    isWidth={isWidth}>\n    <div className=\"is-flex\">\n      {label && <label className=\"label\">{label}</label>}\n      {infoIcon && (\n        <IconContainer>\n          {infoIcon}\n          <span className=\"tooltiptext is-size-7\">{iconLabel}</span>\n        </IconContainer>\n      )}\n    </div>\n    {hasAddons && (\n      <p className=\"control\">\n        <span className=\"button is-static\">@gmail.com</span>\n      </p>\n    )}\n    <div className=\"control\">\n      {children || <Input className=\"input\" {...otherProps} />}\n      {errors && <p className=\"help is-danger\">{errors}</p>}\n    </div>\n  </Group>\n);\n\nexport default InputGroup;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Subtitle.js",["479"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.h2`\n  margin-bottom: 0.5rem;\n  margin-top: 1rem;\n  color: ${props => props.theme.secondaryColor};\n`;\n\nconst Subtitle = ({ children }) => (\n  <Container className=\"is-size-6 has-text-weight-bold\">{children}</Container>\n);\n\nexport default Subtitle;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/CreditCardInput.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Heading.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/elements/SelectGroup.js",["480","481","482","483","484","485","486","487","488"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Group = styled.div`\n  .control {\n    width: ${props => (props.fullWidth ? '100%' : '')} !important;\n  }\n  label {\n    width: ${props => (props.isWidth ? '10rem' : '')} !important;\n  }\n`;\n\nconst Input = styled.div`\n  box-shadow: none;\n  border-top: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-left: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-right: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-radius: ${props => (props.hasRadius ? '5px' : '0')};\n  border-top-right-radius: 7px !important;\n  border-top-left-radius: 7px !important;\n  border-bottom: ${props => `1px solid ${props.theme.borderColor}`};\n  width: 100%;\n  select {\n    width: 100%;\n  }\n`;\n\nconst SelectGroup = ({\n  label,\n  errors,\n  fullWidth,\n  isWidth,\n  isHorizontal,\n  options,\n  border,\n  placeholder,\n  ...otherProps\n}) => (\n  <Group\n    className={`field ${isHorizontal ? 'is-horizontal' : ''}`}\n    fullWidth={fullWidth}\n    isWidth={isWidth}>\n    {label && <label className=\"label\">{label}</label>}\n    <div className=\"control\">\n      <Input className=\"select\">\n        <select {...otherProps}>\n          <option>{placeholder}...</option>\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.title}\n            </option>\n          ))}\n        </select>\n      </Input>\n      {errors && <p className=\"help is-danger\">{errors}</p>}\n    </div>\n  </Group>\n);\n\nexport default SelectGroup;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Loading.js",["489"],"import React from 'react';\nimport styled from 'styled-components';\nimport ReactLoading from 'react-loading';\n\nconst Container = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  padding: 2rem 1rem;\n`;\n\nconst Loading = ({ color }) => {\n  return (\n    <Container>\n      <ReactLoading type=\"spin\" color={color || '#363636'} />\n    </Container>\n  );\n};\n\nexport default Loading;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Button.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import React from 'react';\nimport styled from 'styled-components';\n\nimport theme from '../../utils/theme';\n\nconst Container = styled.button`\n  &&& {\n    ${props => props.style};\n    margin-top: ${props => (props.marginTop ? '2rem' : '')};\n    border-color: transparent !important;\n    color: ${props => (props.paddingless ? props.theme.primaryColor : '#fff')};\n    padding-left: ${props => (props.paddingless ? '0px' : '1.4em')};\n    padding-right: ${props => (props.paddingless ? '0px' : '1.4em')};\n    padding-top: ${props => (props.paddingless ? '0px' : '1.4em')};\n    padding-bottom: ${props => (props.paddingless ? '0px' : '1.4em')};\n    margin-bottom: ${props =>\n      props.paddingless || props.marginBottomNone ? '0px' : '2rem'};\n    padding-top: ${props => (props.paddingless ? 'calc(0px)' : '')};\n    height: ${props => (props.paddingless ? '2em' : '')};\n    background-color: ${props =>\n      props.bgColor ? props.bgColor : props.theme.mainBrandColor};\n    font-weight: ${props => props.fontWeight};\n    font-family: 'Poppins', sans-serif !important;\n    font-size: ${props => (props.fontSize ? props.fontSize : '16px')};\n    :hover {\n      background: ${props =>\n        props.paddingless ? 'transparent' : props.theme.secondaryColor};\n      transition: 0.6s;\n      color: ${props =>\n        props.paddingless ? props.theme.primaryColor : '#fff'};\n    }\n    :active {\n      background: ${props => props.theme.primaryColor};\n    }\n  }\n`;\n\nconst Button = ({\n  className,\n  children,\n  secondary,\n  primary,\n  loading,\n  brandColor,\n  ...otherProps\n}) => {\n  let bgColor = theme.primaryColor;\n  if (primary) {\n    bgColor = brandColor;\n  }\n\n  return (\n    <Container\n      type=\"submit\"\n      className={`button ${\n        secondary ? '' : 'is-primary is-outlined is-medium'\n      } ${loading ? 'is-loading' : ''}`}\n      bgColor={bgColor}\n      {...otherProps}>\n      {children}\n    </Container>\n  );\n};\n\nexport default Button;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/CheckBox.js",["507","508"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  input {\n    height: 2.5rem;\n    width: 2.5rem;\n    margin-left: ${props => props.margin};\n    @media only screen and (max-width: 600px) {\n      margin-left: 0px;\n    }\n  }\n  .text {\n    margin-top: 5px;\n  }\n  .checkmark {\n    background: transparent;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nconst CheckBox = ({ text, margin }) => (\n  <Container margin={margin}>\n    <div className=\"columns is-horizontal is-mobile\">\n      <div className=\"column is-1-desktop  has-text-left text has-text-weight-semibold\">\n        <label className=\"checkbox\">{text}</label>\n      </div>\n      <div className=\"column\">\n        <input type=\"checkbox\" className=\"checkbox\" />\n        <span className=\"checkmark\"></span>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default CheckBox;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Title.js",["509","510","511"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.h2`\n  margin-bottom: ${(props) =>\n    props.marginbottom ? props.marginbottom : '1.3rem'};\n  color: ${(props) => props.theme.secondaryColor};\n  margin-top: ${(props) => (props.marginTop ? props.marginTop : 'auto')};\n`;\n\nconst Title = ({ children, marginTop, marginbottom, fontSize }) => (\n  <Container\n    className={`is-size-${fontSize ||\n      5} is-size-7-mobile has-text-weight-semibold`}\n    marginTop={marginTop}\n    marginbottom={marginbottom}\n  >\n    {children}\n  </Container>\n);\n\nexport default Title;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/Message.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/elements/ColorPicker.js",["512","513"],"import React from 'react';\nimport { SketchPicker, ChromePicker } from 'react-color';\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { displayColorPicker: false, color: props.color || '#fff' };\n  }\n\n  handleClick = () => {\n    const { displayColorPicker } = this.state;\n    this.setState({ displayColorPicker: !displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange = (color) => {\n    const { onChange } = this.props;\n\n    this.setState({ color: color.rgb });\n    onChange(color.hex);\n  };\n\n  render() {\n    const { displayColorPicker, color, ...otherProps } = this.state;\n    const { selectBrandColor } = this.props;\n    const styles = {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background:\n          selectBrandColor ||\n          `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n    };\n\n    return (\n      <Container>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <ChromePicker\n              color={color}\n              onChange={this.handleChange}\n              {...otherProps}\n            />\n          </div>\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/elements/TextArea.js",["514","515","516","517","518","519","520","521"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Group = styled.div`\n  .control {\n    width: ${props => (props.fullWidth ? '100%' : '')} !important;\n  }\n  label {\n    width: ${props => (props.isWidth ? '10rem' : '')} !important;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  box-shadow: none;\n  border-top: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-left: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-right: ${props =>\n    props.border ? '1px solid theme.borderColor' : 'none'};\n  border-radius: ${props => (props.hasRadius ? '5px' : '0')};\n  border-bottom: ${props => `1px solid ${props.theme.borderColor}`};\n  border-top-right-radius: 7px !important;\n  border-top-left-radius: 7px !important;\n`;\n\nconst TextAreaGroup = ({\n  label,\n  errors,\n  fullWidth,\n  isWidth,\n  isHorizontal,\n  ...otherProps\n}) => (\n  <Group\n    className={`field ${isHorizontal ? 'is-horizontal' : ''}`}\n    fullWidth={fullWidth}\n    isWidth={isWidth}>\n    {label && (\n      <div className=\"is-flex\">\n        <label className=\"label\">{label}</label>\n      </div>\n    )}\n    <div className=\"control\">\n      <TextArea className=\"textarea\" {...otherProps} />\n      {errors && <p className=\"help is-danger\">{errors}</p>}\n    </div>\n  </Group>\n);\n\nexport default TextAreaGroup;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/Seo.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/Layout.js",["522","523","524","525","526","527"],"import React, { useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { isEmpty } from 'lodash';\nimport styled from 'styled-components';\n\nimport config from '../utils/config';\nimport useProjectGuestDetails from '../hooks/useProjectGuestDetails';\nimport AuthHeader from './AuthHeader';\nimport AuthFooter from './AuthFooter';\n\nconst Container = styled.div`\n  && {\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nconst Layout = ({ children, noContainer, hasAuthNav, activeProject }) => {\n  const updateOrigin = useStoreActions(actions => actions.origin.update);\n  const origin = useStoreState(state => state.origin.value);\n  const [project] = useProjectGuestDetails({ domain: origin });\n  const updateProject = useStoreActions(\n    actions => actions.origin.updateProject,\n  );\n\n  useEffect(() => {\n    updateOrigin(window.location.origin);\n  }, [updateOrigin]);\n\n  useEffect(() => {\n    if (!isEmpty(project)) {\n      updateProject(project);\n    }\n  }, [project, updateProject]);\n\n  return (\n    <Container className={noContainer ? 'container is-fluid' : 'container'}>\n      <Helmet title={config.siteName} />\n      {/* {hasAuthNav && <AuthHeader activeProject={activeProject} />} */}\n      {children}\n      {hasAuthNav && <AuthFooter activeProject={activeProject} />}\n    </Container>\n  );\n};\n\nexport default Layout;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/CopyRight.js",["528","529"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: -1.6rem;\n  background-color: #f4f4f6;\n  padding: 1%;\n  color: ${props => props.theme.secondaryColor};\n`;\n\nexport default () => (\n  <Container className=\"has-text-right is-size-7\">\n    <i className=\"far fa-copyright\"></i> {new Date().getFullYear()} InteliShare\n    All Rights Reserved\n  </Container>\n);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/Sidebar.js",["530","531","532","533"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useStoreState } from 'easy-peasy';\nimport { isNull } from 'lodash';\n\nconst Container = styled.aside`\n  background-color: #f4f4f6;\n  height: 100%;\n  min-height: ${props => (props.showOnMobile ? '' : '100vh')};\n  margin-bottom: 0px !important;\n  li {\n    cursor: pointer;\n    :hover {\n      background-color: #e2e4e6;\n    }\n    a {\n      padding: 0.8em 1em;\n    }\n  }\n  .sub-items {\n    a {\n      :hover {\n        background-color: #e1e1e4;\n      }\n    }\n  }\n  .menu-list a.is-active {\n    background-color: #e2e4e6 !important;\n    color: #4a4a4a;\n  }\n`;\n\nconst IconContainer = styled.div`\n  width: 30px;\n  margin-left: 10px;\n`;\n\nconst Icon = styled.i``;\n\nconst LinkWrapper = ({ to, title, icon }) => {\n  const route = useRouteMatch(to);\n  return (\n    <li>\n      <Link\n        className={\n          route\n            ? 'has-text-weight-bold is-active is-flex'\n            : 'has-text-weight-medium is-flex'\n        }\n        to={to}>\n        <IconContainer>{icon && <Icon className={icon}></Icon>}</IconContainer>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nconst Sidebar = ({ showOnMobile }) => {\n  const userData = useStoreState(state => state.user.data);\n  const activeProject = useStoreState(state => state.active.project);\n  // const [isToggledOn, setToggle] = useState(false);\n  // const toggle = () => setToggle(!isToggledOn);\n  // const isCurrentRoute = routeName => {\n  //   // const route = useRouteMatch(routeName);\n  //   // return !isNull(route) ? (route.isExact ? 'is-active' : '') : '';\n  //   return '';\n  // };\n  // const route = useRouteMatch('/admin/help');\n\n  return (\n    <Container\n      showOnMobile={showOnMobile}\n      className={!showOnMobile ? 'menu is-hidden-mobile' : 'menu'}>\n      {userData.type === 'superAdmin' && (\n        <ul className=\"menu-list\">\n          <LinkWrapper title=\"Users\" to=\"/super-admin/dashboard\" />\n          <LinkWrapper title=\"Set Pricing\" to=\"/super-admin/pricing\" />\n          <LinkWrapper title=\"Discount Codes\" to=\"/super-admin/discounts\" />\n          <LinkWrapper title=\"Manage Help\" to=\"/super-admin/help\" />\n        </ul>\n      )}\n      {userData.type === 'admin' && (\n        <ul className=\"menu-list\">\n          <LinkWrapper\n            icon=\"fas fa-plus-circle\"\n            title=\"Create Project\"\n            to=\"/admin/project/create\"\n          />\n          <LinkWrapper\n            icon=\"fas fa-folder-open\"\n            title=\"Manage Projects\"\n            to=\"/admin/dashboard\"\n          />\n\n          {!isNull(activeProject) ? (\n            <div className=\"sub-items\">\n              <LinkWrapper\n                icon=\"fas fa-th-large\"\n                title=\"Manage Pages\"\n                to={`/admin/project/${activeProject}/pages`}\n              />\n              <LinkWrapper\n                icon=\"far fa-envelope\"\n                title=\"Manage Emails\"\n                to={`/admin/project/${activeProject}/emails`}\n              />\n              <LinkWrapper\n                icon=\"fas fa-user-friends\"\n                title=\"Manage Clients\"\n                to={`/admin/project/${activeProject}/clients`}\n              />\n              <LinkWrapper\n                icon=\"fas fa-bell\"\n                title=\"Notifications\"\n                to={`/admin/project/${activeProject}/notifications`}\n              />\n              <LinkWrapper\n                icon=\"fas fa-chart-pie\"\n                title=\"Analytics\"\n                to={`/admin/project/${activeProject}/analytics`}\n              />\n              <LinkWrapper\n                icon=\"fas fa-cogs\"\n                title=\"Project Settings\"\n                to={`/admin/project/${activeProject}/settings`}\n              />\n              <LinkWrapper\n                icon=\"fas fa-sync\"\n                title=\"Subscriptions\"\n                to={`/admin/project/${activeProject}/subscription`}\n              />\n              <LinkWrapper\n                icon=\"far fa-question-circle\"\n                title=\"Help\"\n                to=\"/admin/help\"\n              />\n            </div>\n          ) : null}\n        </ul>\n      )}\n      {userData.type === 'client' && (\n        <ul className=\"menu-list\">\n          <LinkWrapper title=\"Files\" to=\"/client/dashboard\" />\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/Header.js",["534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useStoreState } from 'easy-peasy';\nimport { Link } from 'react-router-dom';\n\nimport logoAlt from '../assets/images/logo.svg';\nimport Sidebar from './Sidebar';\n\nconst Container = styled.div`\n  background-color: ${props => props.theme.secondaryColor};\n  .navbar {\n    background-color: ${props => props.theme.secondaryColor};\n  }\n  .navbar-item {\n    background: transparent !important;\n  }\n  .navbar-end {\n    background-color: ${props => props.theme.secondaryColor};\n  }\n  @media screen and (max-width: 1023px) {\n    .navbar-menu {\n      padding: 0;\n    }\n  }\n`;\n\nconst AdminNav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  @media screen and (max-width: 768px) {\n    flex-direction: column-reverse;\n  }\n  .navbar-end {\n    justify-content: space-between;\n  }\n  .navbar-item {\n    padding-right: 0.2rem;\n  }\n`;\n\nconst LinkLogo = styled(Link)`\n  :hover {\n    background: transparent !important;\n  }\n`;\n\nconst LinkWrapper = styled(Link)`\n  color: #e8e9ea;\n  :hover {\n    color: #e8e9ea;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 140px;\n  height: auto;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: transparent;\n  color: #e8e9ea;\n  margin-right: 0px !important;\n  :hover {\n    color: #e8e9ea;\n  }\n`;\n\nconst AdminBurgerMenu = styled.div`\n  /* background: ${props => props.theme.menuBackgroundColor}; */\n  .admin-nav-mobile {\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: -0.25rem;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst Header = () => {\n  const [showSideBar, setShowSideBar] = useState(false);\n  const userData = useStoreState(state => state.user.data);\n  const handleLogout = () => {\n    window.localStorage.clear();\n    window.location.reload(true);\n    window.location.replace('/');\n  };\n\n  return (\n    <div>\n      {userData.type === 'superAdmin' && (\n        <Container>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n              <LinkLogo className=\"navbar-item\" to=\"/super-admin/dashboard\">\n                <Logo src={logoAlt} alt=\"logo\" />\n              </LinkLogo>\n              <a\n                role=\"button\"\n                className=\"navbar-burger burger\"\n                aria-label=\"menu\"\n                aria-expanded=\"false\"\n                data-target=\"navbarBasicExample\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </a>\n            </div>\n            <div className=\"navbar-menu\">\n              <div className=\"navbar-end\">\n                <div className=\"navbar-item\">\n                  <div className=\"buttons\">\n                    <Button className=\"button\" onClick={() => handleLogout()}>\n                      <i className=\"fas fa-power-off\"></i>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </Container>\n      )}\n      {userData.type === 'admin' && (\n        <Container>\n          <AdminBurgerMenu\n            id=\"navbarBasicExample\"\n            className=\"navbar-menu is-active is-hidden-desktop\">\n            <div className=\"navbar-end is-flex admin-nav-mobile\">\n              <span className=\"navbar-item has-text-white is-size-7\">\n                {userData.email}\n              </span>\n              <span className=\"navbar-item has-text-white\">\n                <div className=\"buttons\">\n                  <Button className=\"\">\n                    <LinkWrapper to=\"/admin/settings\">\n                      <i className=\"fas fa-cog\"></i>\n                    </LinkWrapper>\n                  </Button>\n                  <Button className=\"\" onClick={() => handleLogout()}>\n                    <i className=\"fas fa-power-off\"></i>\n                  </Button>\n                </div>\n              </span>\n            </div>\n          </AdminBurgerMenu>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n              <Link className=\"navbar-item\" to=\"/admin/dashboard\">\n                <Logo src={logoAlt} alt=\"logo\" />\n              </Link>\n              <a\n                className={\n                  showSideBar\n                    ? 'is-active navbar-burger has-text-white'\n                    : 'navbar-burger has-text-white'\n                }\n                aria-label=\"menu\"\n                aria-expanded=\"false\"\n                data-target=\"navbarBasicExample\"\n                onClick={() => setShowSideBar(!showSideBar)}>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </a>\n            </div>\n            <AdminBurgerMenu id=\"navbarBasicExample\" className=\"navbar-menu\">\n              <div className=\"navbar-end\">\n                <span className=\"navbar-item has-text-white\">\n                  {userData.email}\n                </span>\n                <span className=\"navbar-item has-text-white\">\n                  <div className=\"buttons\">\n                    <Button className=\"button\">\n                      <LinkWrapper to=\"/admin/settings\">\n                        <i className=\"fas fa-cog\"></i>\n                      </LinkWrapper>\n                    </Button>\n                    <Button className=\"button\" onClick={() => handleLogout()}>\n                      <i className=\"fas fa-power-off\"></i>\n                    </Button>\n                  </div>\n                </span>\n              </div>\n            </AdminBurgerMenu>\n          </nav>\n          {showSideBar && (\n            <div className=\"is-hidden-desktop\">\n              <Sidebar showOnMobile />\n            </div>\n          )}\n        </Container>\n      )}\n    </div>\n  );\n};\nexport default Header;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/RegisterForm.js",["551","552"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n\nimport { InputGroup, Button } from './elements';\nimport NDAScroller from './NDAScroller';\nimport Disclaimer from './Disclaimer';\n\nconst MarginContainer = styled.div`\n  margin-top: 2.5rem;\n`;\n\nconst RegisterForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    project,\n    isAdminRegister,\n  } = props;\n  const [ndaAccepted, setNdaAccepted] = useState(\n    !(!isAdminRegister && project.nda),\n  );\n  // console.log('ndaAccepted', ndaAccepted);\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        border\n        label=\"Full Name:\"\n        name=\"fullName\"\n        type=\"text\"\n        value={values.fullName}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.fullName && touched.fullName ? errors.fullName : undefined\n        }\n      />\n      {isAdminRegister && (\n        <InputGroup\n          border\n          label=\"Company Name:\"\n          name=\"companyName\"\n          type=\"text\"\n          value={values.companyName}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          errors={\n            errors.companyName && touched.companyName\n              ? errors.companyName\n              : undefined\n          }\n        />\n      )}\n      {isAdminRegister && (\n        <InputGroup\n          border\n          label=\"Telephone:\"\n          name=\"telephone\"\n          type=\"text\"\n          value={values.telephone}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          errors={\n            errors.telephone && touched.telephone ? errors.telephone : undefined\n          }\n        />\n      )}\n      <InputGroup\n        border\n        label=\"Email:\"\n        name=\"email\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.email && touched.email ? errors.email : undefined}\n        readOnly={!isAdminRegister}\n      />\n      <InputGroup\n        border\n        label=\"Password:\"\n        name=\"password\"\n        type=\"password\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.password && touched.password ? errors.password : undefined\n        }\n      />\n      <InputGroup\n        border\n        label=\"Confirm Password:\"\n        name=\"confirmPassword\"\n        type=\"password\"\n        value={values.confirmPassword}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.confirmPassword && touched.confirmPassword\n            ? errors.confirmPassword\n            : undefined\n        }\n      />\n      {project.nda && <NDAScroller data={project.nda} />}\n      {!isAdminRegister && project.nda && (\n        <label className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            defaultChecked={ndaAccepted}\n            onChange={() => setNdaAccepted(!ndaAccepted)}\n          />{' '}\n          <strong>I Accept the above Non Disclosure Agreement</strong>\n        </label>\n      )}\n      {isAdminRegister && (\n        <MarginContainer className=\"has-text-weight-semibold\">\n          By creating an account you agree to the website{' '}\n          <a href=\"#\">terms and conditions</a> and our{' '}\n          <a href=\"#\">privacy notice.</a>\n        </MarginContainer>\n      )}\n      <div className=\"field\">\n        <div className=\"control\">\n          {isAdminRegister ? (\n            <Button\n              marginTop\n              marginBottomNone\n              type=\"submit\"\n              disabled={isSubmitting}>\n              <span className=\"has-text-weight-bold is-size-4\">\n                Create Account\n              </span>\n            </Button>\n          ) : (\n            <Button\n              marginTop\n              marginBottomNone\n              type=\"submit\"\n              disabled={!ndaAccepted || isSubmitting}>\n              <span className=\"has-text-weight-bold is-size-4\">\n                Create Account\n              </span>\n            </Button>\n          )}\n        </div>\n      </div>\n      <Disclaimer\n        data={\n          project.disclaimer ? (\n            project.disclaimer\n          ) : (\n            <MarginContainer>\n              {/* © 2020. Intellishare. All Rights Reserved. */}\n            </MarginContainer>\n          )\n        }\n      />\n    </form>\n  );\n};\n\nRegisterForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues }) => ({\n    fullName: initialValues.fullName ? initialValues.fullName : '',\n    email: initialValues.email ? initialValues.email : '',\n    password: initialValues.password ? initialValues.password : '',\n    confirmPassword: initialValues.confirmPassword\n      ? initialValues.confirmPassword\n      : '',\n    companyName: initialValues.companyName ? initialValues.companyName : '',\n    telephone: initialValues.telephone ? initialValues.telephone : '',\n  }),\n  validationSchema: yup.object().shape({\n    fullName: yup.string().required('name is required!'),\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n    password: yup\n      .string()\n      .required('Password is required!')\n      .min(6, 'Seems a bit short...'),\n    confirmPassword: yup\n      .string()\n      .required('This filed is required!')\n      .label('Confirm password')\n      .test('passwords-match', 'Passwords not matched!', function(values) {\n        return this.parent.password === values;\n      }),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'RegisterForm', // helps with React DevTools\n})(RegisterForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/MainColumn.js",["553","554","555"],"import styled from 'styled-components';\n\nconst MainColumn = styled.div`\n  margin-left: ${props => (props.marginleft ? props.marginleft : '')};\n  margin-right: ${props => (props.marginRight ? props.marginRight : '')};\n  padding: 2rem 2rem;\n  padding-top: ${props => (props.paddingtop ? props.paddingtop : '')};\n`;\n\nexport default MainColumn;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectInfoForm.js",["556"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport Cleave from 'cleave.js/react';\n\nimport { InputGroup, Button } from './elements';\n\nconst ProjectInfoForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        label=\"Project Name\"\n        placeholder=\"Colliers\"\n        name=\"name\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.name && touched.name ? errors.name : undefined}\n      />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Project URL Slug\"\n        errors={errors.slug && touched.slug ? errors.slug : undefined}>\n        <Cleave\n          placeholder=\"colliers\"\n          name=\"slug\"\n          id=\"slug\"\n          value={values.slug}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          options={{ prefix: 'intellishare.online/' }}\n          className=\"input is-shadowless\"\n        />\n      </InputGroup>\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        label=\"Custom Domain Name\"\n        placeholder=\"www.colliers.co.uk/arden\"\n        name=\"customDomain\"\n        value={values.customDomain}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.customDomain && touched.customDomain\n            ? errors.customDomain\n            : undefined\n        }\n      />\n      <InputGroup\n        readOnly\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        label=\"Project Size\"\n        placeholder=\"5GB\"\n        name=\"projectSize\"\n        value={values.projectSize}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.projectSize && touched.projectSize\n            ? errors.projectSize\n            : undefined\n        }\n      />\n      <div className=\"field\">\n        <div className=\"is-pulled-right\">\n          <Button disabled={isSubmitting}>Save</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nProjectInfoForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues }) => ({\n    name: initialValues.name || '',\n    slug: initialValues.slug || '',\n    customDomain: initialValues.customDomain || '',\n    percentage: initialValues.percentage || '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Name is required!'),\n    slug: yup.string().required('Default URL is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'ProjectInfoForm', // helps with React DevTools\n})(ProjectInfoForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminHeader.js",["557","558"],"/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectDetails.js",["559","560"],"import { useEffect } from 'react';\nimport { useStoreActions } from 'easy-peasy';\nimport { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst projectQuery = gql`\n  query project($id: ID!) {\n    project(id: $id) {\n      id\n      name\n      slug\n      logo\n      heroImage\n      customDomain\n      subscriptionName\n      subscriptionDurationInMonths\n      subscriptionAmount\n      disclaimer\n      nda\n      brandColor\n      contactName\n      contactTelephone\n      contactEmail\n      welcomeEmailTemplate {\n        subject\n        body\n      }\n      clientEmailTemplate {\n        subject\n        body\n      }\n      clients {\n        id\n        email\n        status\n        hasAccess\n        notifyStatus\n        user {\n          id\n          profile {\n            fullName\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst useProjectDetails = projectId => {\n  // set sidebar active project\n  const updateProject = useStoreActions(\n    actions => actions.active.updateProject,\n  );\n\n  // fetch project data from api\n  const [getProject, resultProject] = useLazyQuery(projectQuery, {\n    variables: { id: projectId },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const project =\n    resultProject.data && resultProject.data.project\n      ? resultProject.data.project\n      : {};\n\n  useEffect(() => {\n    if (projectId) {\n      getProject();\n    }\n  }, [projectId, getProject]);\n\n  useEffect(() => {\n    updateProject(projectId);\n  }, [projectId, updateProject]);\n\n  return [project, resultProject];\n};\n\nexport default useProjectDetails;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/SettingsForm.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/DiscountForm.js",["561"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { InputGroup, Button } from './elements';\n\nconst DiscountForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        label=\"Discount Title\"\n        placeholder=\"Summer Discount\"\n        name=\"name\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.name && touched.name ? errors.name : undefined}\n      />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Discount Code\"\n        placeholder=\"SAVE50\"\n        name=\"code\"\n        value={values.code}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.code && touched.code ? errors.code : undefined}\n      />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        type=\"number\"\n        label=\"Percentage\"\n        placeholder=\"50\"\n        name=\"percentage\"\n        value={values.percentage}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.percentage && touched.percentage\n            ? errors.percentage\n            : undefined\n        }\n      />\n      <div className=\"field\">\n        <div className=\"is-pulled-right\">\n          <Button disabled={isSubmitting}>Submit</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nDiscountForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    code: '',\n    percentage: '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Name is required!'),\n    code: yup.string().required('Code is required!'),\n    percentage: yup.string().required('Percentage is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'DiscountForm', // helps with React DevTools\n})(DiscountForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectSettingForm.js",["562","563","564"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport Cleave from 'cleave.js/react';\n\nimport { InputGroup, Button, TextAreaGroup, ColorPicker } from './elements';\n\nconst ProjectSettingForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div style={{ height: '56px' }}>\n        <div className=\"button-field is-pulled-right\">\n          <Button disabled={isSubmitting}>Update</Button>\n        </div>\n      </div>\n      <br />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        groupWidth\n        label=\"Project Name\"\n        errors={errors.name && touched.name ? errors.name : undefined}\n        placeholder=\"colliers\"\n        name=\"name\"\n        id=\"name\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className=\"input is-shadowless\"></InputGroup>\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Project URL Slug\"\n        errors={errors.slug && touched.slug ? errors.slug : undefined}>\n        <Cleave\n          placeholder=\"colliers\"\n          name=\"slug\"\n          id=\"slug\"\n          value={values.slug}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          options={{ prefix: 'intellishare.online/' }}\n          className=\"input is-shadowless\"\n        />\n      </InputGroup>\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Custom Domain\"\n        placeholder=\"www.projectname.co.uk\"\n        name=\"customDomain\"\n        value={values.customDomain}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.customDomain && touched.customDomain\n            ? errors.customDomain\n            : undefined\n        }\n      />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Brand Colour\"\n        errors={\n          errors.brandColor && touched.brandColor\n            ? errors.brandColor\n            : undefined\n        }>\n        <ColorPicker\n          name=\"brandColor\"\n          id=\"brandColor\"\n          label=\"Brand Colour\"\n          color={values.brandColor}\n          selectBrandColor={values.brandColor}\n          onChange={val => setFieldValue('brandColor', val)}\n        />\n      </InputGroup>\n      <TextAreaGroup\n        fullWidth\n        isWidth\n        border\n        isHorizontal\n        label=\"Non-Disclosure Agreement\"\n        name=\"nda\"\n        className=\"textarea\"\n        value={values.nda}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.nda && touched.nda ? errors.nda : undefined}\n      />\n\n      <div>\n        {/* <label className=\"label\">Footer contact information</label> */}\n        <div className=\"columns\" style={{ marginTop: '1rem' }}>\n          <div className=\"column\">\n            <InputGroup\n              fullWidth\n              isWidth\n              border\n              label=\"Contact Name\"\n              name=\"contactName\"\n              value={values.contactName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              errors={\n                errors.contactName && touched.contactName\n                  ? errors.contactName\n                  : undefined\n              }\n            />\n          </div>\n          <div className=\"column\">\n            <InputGroup\n              fullWidth\n              isWidth\n              border\n              label=\"Contact Telephone\"\n              name=\"contactTelephone\"\n              value={values.contactTelephone}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              errors={\n                errors.contactTelephone && touched.contactTelephone\n                  ? errors.contactTelephone\n                  : undefined\n              }\n            />\n          </div>\n          <div className=\"column\">\n            <InputGroup\n              fullWidth\n              isWidth\n              border\n              label=\"Contact Email\"\n              name=\"contactEmail\"\n              value={values.contactEmail}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              errors={\n                errors.contactEmail && touched.contactEmail\n                  ? errors.contactEmail\n                  : undefined\n              }\n            />\n          </div>\n        </div>\n        <div className=\"disclaimer-note\">\n          <small>\n            This information will show in the client view above in the footer\n            disclaimer\n          </small>\n        </div>\n        <TextAreaGroup\n          fullWidth\n          isWidth\n          border\n          label=\"Footer Disclaimer\"\n          name=\"disclaimer\"\n          className=\"textarea\"\n          value={values.disclaimer}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          errors={\n            errors.disclaimer && touched.disclaimer\n              ? errors.disclaimer\n              : undefined\n          }\n        />\n      </div>\n\n      <div\n        className=\"button-field is-pulled-right\"\n        style={{ marginTop: '2rem' }}>\n        <Button disabled={isSubmitting}>Update</Button>\n      </div>\n    </form>\n  );\n};\n\nProjectSettingForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues }) => ({\n    name: initialValues.name || '',\n    slug: initialValues.slug || '',\n    customDomain: initialValues.customDomain || '',\n    disclaimer: initialValues.disclaimer || '',\n    nda: initialValues.nda || '',\n    brandColor: initialValues.brandColor || '',\n    contactName: initialValues.contactName || '',\n    contactTelephone: initialValues.contactTelephone || '',\n    contactEmail: initialValues.contactEmail || '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Name is required!'),\n    slug: yup.string().required('slug is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values);\n    setSubmitting(false);\n  },\n  displayName: 'ProjectSettingForm', // helps with React DevTools\n})(ProjectSettingForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/PaymentConfirmation.js",["565"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport paymentImg from '../assets/images/success.png';\n\nconst Container = styled.div`\n  align-self: center;\n  .subtitle {\n    margin-bottom: 2rem !important;\n    margin-top: 1.5rem !important;\n  }\n  .image img {\n    width: 25% !important;\n  }\n  figure {\n    justify-content: center;\n    padding-bottom: 20px;\n  }\n`;\n\nconst LinkStyled = styled(Link)`\n  :hover {\n    background-color: ${props => props.theme.primaryColor};\n  }\n`;\n\nconst PaymentConfirmation = ({ project }) => (\n  <Container>\n    <div className=\"hero-body\">\n      <div className=\"has-text-centered\">\n        <figure className=\"image is-flex\">\n          <img src={paymentImg} alt=\"Payment Successful\" />\n        </figure>\n        <p className=\"title is-size-2 has-text-weight-normal\">\n          Payment Successful\n        </p>\n        <p className=\"subtitle is-size-6 has-text-weight-semibold\">\n          Your new Project has been setup.\n        </p>\n        <LinkStyled\n          className=\"button is-primary is-large\"\n          to={`/admin/project/${project.id}/pages`}>\n          Go to your project\n        </LinkStyled>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default PaymentConfirmation;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ProgressBar.js",["566","567","568"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Progress = styled.div`\n  border-top: 1px solid #979797;\n  margin: 3rem 3.5rem;\n  .active {\n    font-weight: bold;\n    .progress {\n      background-color: ${props => props.theme.primaryColor} !important;\n      width: 100%;\n    }\n  }\n  .step {\n    float: left;\n    width: 33.3%;\n    .progress {\n      width: 100%;\n      height: 10px;\n      background-color: #eeeeee;\n      margin: -9px auto 0 auto;\n    }\n  }\n  .step.one {\n    text-align: center;\n    .progress {\n      margin: -9px 0 0 0;\n    }\n  }\n  .step.two {\n    text-align: center;\n  }\n  .step.three {\n    text-align: center;\n    .progress {\n      margin: -9px 0 0 0;\n    }\n  }\n`;\n\nconst ProgressBar = ({ activeStep }) => {\n  return (\n    <Progress>\n      <div className={`step one ${activeStep.stepOne ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">01. Project Setup</span>\n      </div>\n\n      <div className={`step two ${activeStep.stepTwo ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">02. Payment</span>\n      </div>\n      <div className={`step three ${activeStep.stepThree ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">03. Confirmation</span>\n      </div>\n    </Progress>\n  );\n};\n\nexport default ProgressBar;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/PaymentForm.js",["569","570","571","572","573","574","575","576"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport Cleave from 'cleave.js/react';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport { InputGroup, Button, SelectGroup } from './elements';\nimport theme from '../utils/theme';\nimport Subtitle from './elements/Subtitle';\n\nconst Form = styled.form`\n  input {\n    border-color: ${theme.primaryColor};\n    box-shadow: none;\n    :hover {\n      border-color: ${theme.primaryColor};\n    }\n  }\n  .columns {\n    margin-top: -0.5rem;\n  }\n  .notify {\n    display: inline-flex;\n    font-size: 10px;\n  }\n  .button {\n    border-radius: 0 !important;\n  }\n  .field.is-grouped {\n    align-items: flex-end;\n  }\n`;\n\nconst CvvContainer = styled.div`\n  margin-top: -8px;\n`;\n\nconst countries = [\n  {\n    key: 1,\n    title: 'United Kingdom',\n    value: 'united-kingdom',\n  },\n];\nconst discountQuery = gql`\n  query discounts {\n    discounts {\n      id\n      name\n      percentage\n      code\n      status\n    }\n  }\n`;\nconst ProjectSetupForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    subscription,\n  } = props;\n\n  const [couponCode, setCouponCode] = useState(false);\n  const [subscriptionPrice, setSubscriptionPrice] = useState(\n    subscription.price,\n  );\n  const { data } = useQuery(discountQuery, {\n    fetchPolicy: 'cache-and-network',\n  });\n  const couponCodes = data && data.discounts ? data.discounts : [];\n\n  const applyCoupon = () => {\n    if (!couponCode) {\n      return null;\n    }\n    let discountPercentage = 0;\n    couponCodes.map(item => {\n      if (item.code == couponCode) {\n        discountPercentage = item.percentage;\n      }\n    });\n\n    if (discountPercentage !== 0) {\n      const price = (subscription.price * discountPercentage) / 100;\n      setSubscriptionPrice(subscription.price - price);\n    } else {\n      setCouponCode('invalid');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <Subtitle>Billing Address</Subtitle>\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Address Line 1\"\n            name=\"addressLine1\"\n            type=\"text\"\n            value={values.addressLine1}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.addressLine1 && touched.addressLine1\n                ? errors.addressLine1\n                : undefined\n            }\n          />\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Address Line 2\"\n            name=\"addressLine2\"\n            type=\"text\"\n            value={values.addressLine2}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.addressLine2 && touched.addressLine2\n                ? errors.addressLine2\n                : undefined\n            }\n          />\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"City\"\n            name=\"city\"\n            type=\"text\"\n            value={values.city}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={errors.city && touched.city ? errors.city : undefined}\n          />\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"County\"\n            name=\"state\"\n            type=\"text\"\n            value={values.state}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={errors.state && touched.state ? errors.state : undefined}\n          />\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Postcode\"\n            name=\"postcode\"\n            type=\"text\"\n            value={values.postcode}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.postcode && touched.postcode ? errors.postcode : undefined\n            }\n          />\n          <SelectGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Country\"\n            name=\"country\"\n            type=\"text\"\n            value={values.country}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.country && touched.country ? errors.country : undefined\n            }\n            options={countries}\n          />\n          <Subtitle>Payment Info</Subtitle>\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Name on card\"\n            name=\"paymentCardName\"\n            value={values.paymentCardName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.paymentCardName && touched.paymentCardName\n                ? errors.paymentCardName\n                : undefined\n            }\n          />\n          <InputGroup\n            fullWidth\n            isWidth\n            border\n            errors={\n              errors.paymentCardNumber && touched.paymentCardNumber\n                ? errors.paymentCardNumber\n                : undefined\n            }>\n            <Cleave\n              placeholder=\"4242 4242 4242 4242\"\n              name=\"paymentCardNumber\"\n              id=\"paymentCardNumber\"\n              value={values.paymentCardNumber}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              options={{ creditCard: true }}\n              className=\"input is-shadowless\"\n            />\n          </InputGroup>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <InputGroup\n                fullWidth\n                isWidth\n                border\n                errors={\n                  errors.paymentCardExpiryMonth &&\n                  touched.paymentCardExpiryMonth\n                    ? errors.paymentCardExpiryMonth\n                    : undefined\n                }>\n                <Cleave\n                  placeholder=\"12\"\n                  name=\"paymentCardExpiryMonth\"\n                  id=\"paymentCardExpiryMonth\"\n                  value={values.paymentCardExpiryMonth}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  options={{ date: true, datePattern: ['m'] }}\n                  className=\"input is-shadowless\"\n                />\n              </InputGroup>\n            </div>\n            <div className=\"column\">\n              <InputGroup\n                fullWidth\n                isWidth\n                border\n                errors={\n                  errors.paymentCardExpiryYear && touched.paymentCardExpiryYear\n                    ? errors.paymentCardExpiryYear\n                    : undefined\n                }>\n                <Cleave\n                  placeholder=\"2022\"\n                  name=\"paymentCardExpiryYear\"\n                  id=\"paymentCardExpiryYear\"\n                  value={values.paymentCardExpiryYear}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  options={{ date: true, datePattern: ['Y'] }}\n                  className=\"input is-shadowless\"\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <CvvContainer>\n            <InputGroup\n              type=\"number\"\n              maxLength={3}\n              fullWidth\n              isWidth\n              border\n              errors={\n                errors.paymentCardCvv && touched.paymentCardCvv\n                  ? errors.paymentCardCvv\n                  : undefined\n              }>\n              <Cleave\n                placeholder=\"123\"\n                name=\"paymentCardCvv\"\n                id=\"paymentCardCvv\"\n                value={values.paymentCardCvv}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                options={{ numeral: true }}\n                className=\"input is-shadowless\"\n              />\n            </InputGroup>\n          </CvvContainer>\n        </div>\n        <div className=\"column\">\n          <Subtitle>Project Summary</Subtitle>\n          <InputGroup\n            readOnly\n            fullWidth\n            isWidth\n            border\n            placeholder=\"Project Arden\"\n            name=\"projectName\"\n            type=\"text\"\n            value={values.projectName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.projectName && touched.projectName\n                ? errors.projectName\n                : undefined\n            }\n          />\n          <InputGroup\n            readOnly\n            fullWidth\n            isWidth\n            border\n            label=\"Project Plan\"\n            placeholder=\"Monthly | £30 | 6Months (£180) | Annually (£360)\"\n            name=\"projectPlan\"\n            type=\"text\"\n            value={subscription.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            errors={\n              errors.projectPlan && touched.projectPlan\n                ? errors.projectPlan\n                : undefined\n            }\n          />\n          <div className=\"field is-grouped\">\n            <div className=\"control is-expanded\">\n              <InputGroup\n                fullWidth\n                border\n                placeholder=\"Enter Discount code\"\n                label=\"Do you have a discount code?\"\n                name=\"discount\"\n                type=\"text\"\n                onChange={e => setCouponCode(e.target.value)}\n                onBlur={handleBlur}\n              />\n            </div>\n            <p className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={applyCoupon}>\n                Apply\n              </button>\n            </p>\n          </div>\n          {couponCode == 'invalid' && (\n            <p className=\"has-text-danger\">Coupon code is invalid</p>\n          )}\n          <div className=\"columns\">\n            <div className=\"column\">\n              <Subtitle>Amount due today</Subtitle>\n            </div>\n            <div className=\"column\">\n              <p className=\"is-size-3 is-pulled-right has-text-weight-bold\">\n                £{subscriptionPrice}\n              </p>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"is-pulled-right\">\n              <Button disabled={isSubmitting}>Make Payment</Button>\n            </div>\n          </div>\n          <div className=\"notify\"></div>\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nProjectSetupForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues }) => ({\n    country: '',\n    addressLine1: '',\n    addressLine2: '',\n    city: '',\n    state: '',\n    postcode: '',\n    paymentCardName: '',\n    paymentCardNumber: '',\n    paymentCardExpiryMonth: '',\n    paymentCardExpiryYear: '',\n    paymentCardCvv: '',\n    projectName: initialValues.name || '',\n    projectPlan: '',\n  }),\n  validationSchema: yup.object().shape({\n    country: yup.string().required('Country is required!'),\n    addressLine1: yup.string().required('Address is required!'),\n    city: yup.string().required('City is required!'),\n    postcode: yup.string().required('Post Code is required!'),\n    paymentCardName: yup.string().required('Card Name is required!'),\n    paymentCardNumber: yup.number().required('Card Number is required!'),\n    paymentCardExpiryMonth: yup\n      .number()\n      .required('Card Expiry Month is required!'),\n    paymentCardExpiryYear: yup\n      .number()\n      .required('Card Expiry Year is required!'),\n    paymentCardCvv: yup.number().required('Card CVV is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'ProjectSetupForm', // helps with React DevTools\n})(ProjectSetupForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectSetupForm.js",["577","578","579","580"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport Cleave from 'cleave.js/react';\n\nimport { InputGroup, Button, SelectGroup } from './elements';\nimport { formatCurrency } from '../utils/helpers';\n\nconst Form = styled.form`\n  input {\n    border-color: ${(propsInput) => propsInput.theme.primaryColor};\n    box-shadow: none;\n    :hover {\n      border-color: ${(propsInput) => propsInput.theme.primaryColor};\n    }\n  }\n  .columns {\n    margin-top: 1.5rem;\n  }\n`;\n\nconst infoIcon = <i className=\"fas fa-info-circle\"></i>;\n\nconst ProjectSetupForm = (props) => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    packages,\n  } = props;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        label=\"Project Name\"\n        placeholder=\"Project Arden\"\n        name=\"name\"\n        type=\"text\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.name && touched.name ? errors.name : undefined}\n      />\n      <InputGroup\n        fullWidth\n        isWidth\n        border\n        label=\"Project URL Slug\"\n        errors={errors.slug && touched.slug ? errors.slug : undefined}\n      >\n        <Cleave\n          placeholder=\"colliers\"\n          name=\"slug\"\n          id=\"slug\"\n          value={values.slug}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          options={{ prefix: 'intellishare.online/' }}\n          className=\"input is-shadowless\"\n        />\n      </InputGroup>\n      <InputGroup\n        fullWidth\n        border\n        type=\"text\"\n        label=\"Custom Domain Name\"\n        infoIcon={infoIcon}\n        iconLabel=\"Please contact us to help you with this\"\n        placeholder=\"www.projectname.co.uk\"\n        name=\"customDomain\"\n        value={values.customDomain}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.customDomain && touched.customDomain\n            ? errors.customDomain\n            : undefined\n        }\n      />\n      <SelectGroup\n        fullWidth\n        isWidth\n        border\n        label=\"Project Plan\"\n        name=\"subscriptionPlanId\"\n        value={values.subscriptionPlanId}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.subscriptionPlanId && touched.subscriptionPlanId\n            ? errors.subscriptionPlanId\n            : undefined\n        }\n        options={\n          packages\n            ? packages.map((item) => ({\n                value: item.subscriptionPlanId,\n                title: `${item.name} - ${formatCurrency(item.price)} per ${\n                  item.durationInMonths\n                } month`,\n              }))\n            : []\n        }\n      />\n      <div className=\"field\">\n        <div className=\"is-pulled-right\">\n          <Button disabled={isSubmitting}>Continue</Button>\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nProjectSetupForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    slug: '',\n    customDomain: '',\n    subscriptionPlanId: '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Name is required!'),\n    slug: yup\n      .string()\n      .required(\n        'Default URL is required! e.g: intellishare.online/yourproject',\n      ),\n    customDomain: yup.string(),\n    subscriptionPlanId: yup.string().required('Subscription is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values);\n    setSubmitting(false);\n  },\n  displayName: 'ProjectSetupForm', // helps with React DevTools\n})(ProjectSetupForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ContactForm.js",["581"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst ContactForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label className=\"label\">Full name</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            name=\"name\"\n            placeholder=\"Full Name\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.name && touched.name && (\n            <p className=\"help is-danger\">{errors.name}</p>\n          )}\n        </div>\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Your Email</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.email && touched.email && (\n            <p className=\"help is-danger\">{errors.email}</p>\n          )}\n        </div>\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Message</label>\n        <div className=\"control\">\n          <textarea\n            className=\"textarea\"\n            name=\"message\"\n            placeholder=\"Enter your message\"\n            value={values.message}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          {errors.message && touched.message && (\n            <p className=\"help is-danger\">{errors.message}</p>\n          )}\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-link\"\n            disabled={isSubmitting}>\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    email: '',\n    message: '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Full name is required!'),\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n    message: yup.string().required('Message is required!'),\n  }),\n  handleSubmit: (values, { setSubmitting, resetForm, props }) => {\n    // console.log('handle submit', values, props);\n    props.addContact(values);\n    setSubmitting(false);\n\n    resetForm();\n  },\n  displayName: 'ContactUs', // helps with React DevTools\n})(ContactForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AuthFooter.js",["582","583","584","585"],"import React from 'react';\nimport styled from 'styled-components';\n\nimport logo from '../assets/images/logo2.png';\n\nconst Container = styled.section`\n  background-color: #0a253e;\n  a {\n    :hover {\n      color: ${props => props.theme.primaryColor};\n    }\n  }\n`;\n\nconst Logo = styled.img`\n  max-height: 60px;\n  width: 50%;\n  height: auto;\n`;\n\nconst AuthFooter = ({ activeProject }) => (\n  <Container className=\"section\">\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column is-full has-text-centered\">\n          <p className=\"has-text-white\">\n            © 2020 IntelliShare. All Rights Reserved.\n          </p>\n          <div>\n            <a href=\"#\">Privacy Policy</a>{' '}\n            <span className=\"has-text-white\">|</span>{' '}\n            <a href=\"#\">Terms and Conditions</a>\n          </div>\n        </div>\n        <div className=\"column has-text-right\">\n          {/* {activeProject.logo ? (\n            <Logo src={activeProject.logo} alt={activeProject.name} />\n          ) : (\n            ''\n          )} */}\n        </div>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default AuthFooter;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AuthHeader.js",["586","587","588","589","590"],"import React from 'react';\nimport styled from 'styled-components';\n\n// import logo from '../assets/images/logo2.png';\n\nconst Container = styled.section`\n  background-color: #0a253e;\n  padding: 1rem 1.5rem;\n  .navbar-item {\n    background-color: transparent !important;\n  }\n  .navbar {\n    background-color: #0a253e;\n  }\n  .button {\n    border-radius: 30px;\n  }\n`;\n\n// const Logo = styled.img`\n//   max-height: 60px;\n//   width: auto;\n// `;\n\nconst AuthHeader = ({ activeProject }) => (\n  <Container className=\"section\">\n    <div className=\"container\">\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            {/* {activeProject.logo ? (\n              <Logo src={activeProject.logo} alt={activeProject.name} />\n            ) : (\n              <Logo src={logo} alt=\"Intellishare\" />\n            )} */}\n          </a>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\"></div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a className=\"button is-primary\">\n                  <strong>Request Demo</strong>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  </Container>\n);\n\nexport default AuthHeader;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/Disclaimer.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/components/NDAScroller.js",["591"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst ScrollArea = styled.div`\n  overflow: scroll;\n  height: 200px;\n  width: 100%;\n  background: #fff;\n  border: 1px solid #ccc;\n  margin-top: 1rem;\n  padding: 1rem;\n`;\n\nconst Title = styled.h2`\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst NDAScroller = ({ data }) => (\n  <Container>\n    <Title>\n      <span className=\"has-text-weight-semibold\">Please read our</span>{' '}\n      <strong>&apos;Non Disclosure Agreement&apos;</strong>\n    </Title>\n    <ScrollArea>\n      <span\n        dangerouslySetInnerHTML={{ __html: data.replace('\\n', '<br />') }}\n      />\n    </ScrollArea>\n  </Container>\n);\n\nexport default NDAScroller;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/PricingForm.js",["592"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { InputGroup, Button } from './elements';\n\nconst PricingForm = props => {\n  const {\n    initialValues,\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        name=\"name\"\n        label=\"Package Name\"\n        placeholder=\"Monthly/Bi-Annually/Annually\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.name && touched.name ? errors.name : undefined}\n      />\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        type=\"number\"\n        name=\"durationInMonths\"\n        label=\"Duration (in months)\"\n        placeholder=\"6\"\n        disabled={initialValues.durationInMonths}\n        value={values.durationInMonths}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.durationInMonths && touched.durationInMonths\n            ? errors.durationInMonths\n            : undefined\n        }\n      />\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        type=\"number\"\n        name=\"price\"\n        label=\"Price (£)\"\n        placeholder=\"100\"\n        value={values.price}\n        disabled={initialValues.price}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.price && touched.price ? errors.price : undefined}\n      />\n      <div className=\"field\">\n        <div className=\"is-pulled-right\">\n          <Button disabled={isSubmitting}>Save</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nPricingForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues }) => ({\n    name: initialValues.name || '',\n    durationInMonths: initialValues.durationInMonths || '',\n    price: initialValues.price || '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Package Name is required!'),\n    price: yup.string().required('Price is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'PricingForm', // helps with React DevTools\n})(PricingForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ForgotPasswordForm.js",["593","594"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n\nimport { InputGroup, Button } from './elements';\n\nconst ForgotPasswordForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        border\n        label=\"Email\"\n        name=\"email\"\n        placeholder=\"john@doe.com\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.email && touched.email ? errors.email : undefined}\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <Button\n            type=\"submit\"\n            marginTop\n            marginBottomNone\n            disabled={isSubmitting}>\n            <span className=\"has-text-weight-bold has-text-light is-size-4\">\n              Reset Password\n            </span>\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForgotPasswordForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n  }),\n  validationSchema: yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'ForgotPasswordForm', // helps with React DevTools\n})(ForgotPasswordForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/HelpForm.js",["595"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { InputGroup, Button } from './elements';\n\nconst HelpForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        name=\"name\"\n        label=\"Title\"\n        placeholder=\"Video Title\"\n        value={values.name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.name && touched.name ? errors.name : undefined}\n      />\n      <InputGroup\n        isWidth\n        fullWidth\n        border\n        isHorizontal\n        name=\"embedCode\"\n        label=\"Embed Code\"\n        placeholder=\"Paste YouTube Video Link Here\"\n        value={values.embedCode}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.embedCode && touched.embedCode ? errors.embedCode : undefined\n        }\n      />\n      <div className=\"field\">\n        <div className=\"is-pulled-right\">\n          <Button disabled={isSubmitting}>Submit</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nHelpForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    embedCode: '',\n  }),\n  validationSchema: yup.object().shape({\n    name: yup.string().required('Video title is required!'),\n    embedCode: yup.string().required('Embed Code is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values);\n    setSubmitting(false);\n  },\n  displayName: 'HelpForm', // helps with React DevTools\n})(HelpForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/LoginForm.js",["596","597"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { InputGroup, Button } from './elements';\n\nconst ResetPassword = styled.div`\n  a {\n    :hover {\n      color: ${props => props.theme.primaryColor};\n    }\n  }\n`;\n\nconst LoginForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        border\n        label=\"Email\"\n        name=\"email\"\n        placeholder=\"john@doe.com\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.email && touched.email ? errors.email : undefined}\n      />\n      <InputGroup\n        border\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"*********\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.password && touched.password ? errors.password : undefined\n        }\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <Button\n            marginTop\n            marginBottomNone\n            type=\"submit\"\n            disabled={isSubmitting}>\n            <span className=\"has-text-weight-bold is-size-4\">Log In</span>\n          </Button>\n        </div>\n      </div>\n      <ResetPassword>\n        <Link to=\"/forgot-password\">Forgot Password?</Link>\n      </ResetPassword>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: '',\n  }),\n  validationSchema: yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n    password: yup.string().required('Password is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'LoginForm', // helps with React DevTools\n})(LoginForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/Footer.js",["598"],"import React from 'react';\nimport styled from 'styled-components';\n\nimport logoAlt from '../assets/images/logo.svg';\n\nconst Container = styled.div`\n  background-color: ${props => props.theme.secondaryColor};\n  margin-top: -2rem;\n  .section {\n    padding: 1rem 1.5rem 0.7rem 1.5rem;\n  }\n`;\nconst Logo = styled.img`\n  width: 140px;\n  height: auto;\n`;\n\nconst Footer = () => (\n  <Container>\n    <section className=\"section\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <Logo src={logoAlt} alt=\"logo\" />\n        </div>\n        <div className=\"column\">\n          <p className=\"has-text-right is-size-7 has-text-white\">\n            {new Date().getFullYear()} Intellishare. All Rights Reserved.\n          </p>\n        </div>\n      </div>\n    </section>\n  </Container>\n);\n\nexport default Footer;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/SetPasswordForm.js",["599"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { InputGroup, Button } from './elements';\n\nconst SetPasswordForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup\n        label=\"Password:\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"*********\"\n        value={values.password}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.password && touched.password ? errors.password : undefined\n        }\n      />\n      <InputGroup\n        label=\"Repeat Password:\"\n        name=\"confirmPassword\"\n        type=\"password\"\n        placeholder=\"*********\"\n        value={values.confirmPassword}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={\n          errors.confirmPassword && touched.confirmPassword\n            ? errors.confirmPassword\n            : undefined\n        }\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <Button disabled={isSubmitting}>Set Password</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nSetPasswordForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    password: '',\n    confirmPassword: '',\n  }),\n  validationSchema: yup.object().shape({\n    password: yup\n      .string()\n      .required('Password is required!')\n      .min(2, 'Seems a bit short...'),\n    confirmPassword: yup\n      .string()\n      .required('This filed is required!')\n      .label('Confirm password')\n      .test('passwords-match', 'Passwords not matched!', function (values) {\n        return this.parent.password === values;\n      }),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'SetPasswordForm', // helps with React DevTools\n})(SetPasswordForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminSubHeader.js",["600","601","602","603","604"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useStoreState } from 'easy-peasy';\n\nimport useProjectDetails from '../hooks/useProjectDetails';\nimport useProjectUpdate from '../hooks/useProjectUpdate';\nimport useProjectPages from '../hooks/useProjectPages';\nimport { Button, Message } from './elements';\nimport theme from '../utils/theme';\n\nimport logoBg from '../assets/images/blank.png';\nimport uploadBannerImg from '../assets/images/upload-banner.svg';\n\nconst Container = styled.div`\n  margin-top: 1rem;\n  padding: 0 2rem;\n  .column {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .column .logo-edit {\n    display: flex;\n  }\n  .column .edit {\n    align-self: center;\n    font-weight: 500;\n  }\n  .is-text {\n    padding: 0px;\n  }\n  .icon {\n    margin-left: 1rem !important;\n    font-size: 8px !important;\n  }\n  .upload-banner-text {\n    height: 70px;\n    display: flex;\n    align-items: center;\n    color: #ffffff;\n  }\n`;\nconst NavbarMenu = styled.nav`\n  background-color: ${(props) => props.brandColor};\n  .navbar-item {\n    :hover {\n      background: #ffffff10;\n      color: #fff !important;\n    }\n  }\n  button {\n    background: ${(props) =>\n      props.brandColor ? props.brandColor : props.theme.menuBackgroundColor};\n\n    :focus {\n      outline: -webkit-focus-ring-color auto 0px;\n    }\n  }\n  .navbar-menu {\n    background: ${(props) => props.brandColor};\n  }\n  .navbar-burger span {\n    color: #ffffff;\n  }\n`;\n\nconst HeroImg = styled.img`\n  height: 10rem;\n  width: auto;\n  object-fit: cover;\n  background-color: #eeeeee;\n`;\nconst Hero = styled.section`\n  .hero-body {\n    position: absolute;\n    align-self: center;\n  }\n  .title {\n    color: ${(props) => props.brandColor};\n  }\n  .edit-banner {\n    height: auto;\n    width: 210px;\n  }\n  button {\n    height: auto !important;\n    border: none;\n  }\n`;\n\nconst AdminSubHeader = () => {\n  const [active, setActive] = useState(false);\n  const [addPageModal, setAddPageModal] = useState(false);\n  const [uploadImageModal, setUploadImageModal] = useState(false);\n  const projectId = useStoreState((state) => state.active.project);\n  const [project, resultProject] = useProjectDetails(projectId);\n  const [executeUpdateProjectMutation, resUpdateProject] = useProjectUpdate();\n  const [{ pages }, resultPages] = useProjectPages(projectId);\n\n  const handleBannerUpload = (uploadResponse) => {\n    executeUpdateProjectMutation({\n      variables: {\n        id: projectId,\n        input: { heroImage: uploadResponse.url },\n      },\n    }).then(() => {\n      setUploadImageModal(false);\n      resultProject.refetch();\n    });\n  };\n\n  const brandColor = project.brandColor\n    ? project.brandColor\n    : theme.primaryColor;\n\n  return (\n    <Container>\n      <NavbarMenu\n        className=\"navbar\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n        brandColor={brandColor}>\n        <div className=\"navbar-brand\">\n          <button\n            type=\"button\"\n            brandColor={brandColor}\n            className={active ? 'is-active navbar-burger' : 'navbar-burger'}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n            onClick={() => setActive(!active)}>\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </button>\n        </div>{' '}\n        <div\n          id=\"navbarBasicExample\"\n          className={active ? 'navbar-menu is-active' : 'navbar-menu'}>\n          <div className=\"navbar-start\" />\n          <div className=\"navbar-end\">\n            <a\n              className=\"navbar-item has-text-white\"\n              onClick={() => setAddPageModal(true)}>\n              + Add Page\n            </a>\n          </div>\n        </div>\n      </NavbarMenu>\n      <Hero className=\"hero\" brandColor={brandColor}>\n        <HeroImg src={project.heroImage || logoBg} alt=\"logo-bg\" />\n\n        <div className=\"hero-body has-text-centered\">\n          <Button primary onClick={() => setUploadImageModal(true)} paddingless>\n            {!project.heroImage ? (\n              <img\n                className=\"edit-banner\"\n                src={uploadBannerImg}\n                alt=\"upload banner\"\n              />\n            ) : (\n              <span className=\"has-text-weight-bold upload-banner-text\">\n                Upload Banner – Minimum Width 1600px\n              </span>\n            )}\n          </Button>\n        </div>\n      </Hero>\n      {resUpdateProject.error && (\n        <Message type=\"error\">{resUpdateProject.error.message}</Message>\n      )}\n    </Container>\n  );\n};\n\nexport default AdminSubHeader;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminUsers.js",["605","606","607"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport swal from 'sweetalert';\n\nimport { Button, Title, Message, Loading } from './elements';\nimport AdminUsersForm from './AdminUsersForm';\n\nconst addProjectClientMutation = gql`\n  mutation addProjectClient($id: ID!, $input: ProjectClientInput!) {\n    addProjectClient(id: $id, input: $input) {\n      id\n      clients {\n        email\n      }\n    }\n  }\n`;\n\nconst removeProjectClientMutation = gql`\n  mutation removeProjectClient($id: ID!, $clientId: ID!) {\n    removeProjectClient(id: $id, clientId: $clientId) {\n      success\n    }\n  }\n`;\n\nconst AdminUsers = ({ result, executeQuery }) => {\n  const [executeMutationAdd, resAdd] = useMutation(addProjectClientMutation);\n  const [executeMutationRemove, resRemove] = useMutation(\n    removeProjectClientMutation,\n  );\n  const project = result.data ? result.data.project : {};\n  // console.log('AdminUsers', result);\n\n  return (\n    <div>\n      <Title marginTop=\"4rem\">Users</Title>\n      {resRemove.error && (\n        <Message type=\"error\">{resRemove.error.message}</Message>\n      )}\n      {result.error && <Message type=\"error\">{result.error.message}</Message>}\n      <table className=\"table is-fullwidth is-hoverable\">\n        <thead>\n          <tr>\n            <th className=\"has-text-left\">User</th>\n            <th className=\"has-text-right\">Delete</th>\n          </tr>\n        </thead>\n        {result.data && project.clients.length > 0 && (\n          <tbody>\n            {project.clients.map(item => (\n              <tr key={item.id}>\n                <td>{item.email}</td>\n                <td className=\"has-text-right\">\n                  <Button\n                    primary\n                    paddingless\n                    onClick={() => {\n                      swal('Are you sure you want to delete this user?', {\n                        buttons: ['Cancel', 'Confirm'],\n                      }).then(async value => {\n                        if (value) {\n                          // console.log('item', item);\n                          await executeMutationRemove({\n                            variables: {\n                              id: project.id,\n                              clientId: item.id,\n                            },\n                          });\n                          executeQuery();\n                        }\n                      });\n                    }}>\n                    DELETE\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        )}\n      </table>\n      <AdminUsersForm\n        onSubmit={async data => {\n          await executeMutationAdd({\n            variables: { id: project.id, input: data },\n          });\n          executeQuery();\n        }}\n      />\n      {resAdd.error && <Message type=\"error\">{resAdd.error.message}</Message>}\n      {resAdd.loading || resRemove.loading || result.loading ? (\n        <Loading />\n      ) : null}\n    </div>\n  );\n};\n\nexport default AdminUsers;\n","/Users/permindersingh/Projects/reviews-system/app/src/components/AdminUsersForm.js",["608"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\n\nimport { InputGroup, Button } from './elements';\n\nconst FormWrapper = styled.form`\n  justify-content: space-between;\n`;\n\nconst AdminUsersForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n\n  return (\n    <FormWrapper onSubmit={handleSubmit} className=\"is-flex\">\n      <InputGroup\n        border\n        name=\"email\"\n        placeholder=\"john@doe.com\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        errors={errors.email && touched.email ? errors.email : undefined}\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <Button secondary marginreq disabled={isSubmitting}>\n            ADD\n          </Button>\n        </div>\n      </div>\n    </FormWrapper>\n  );\n};\n\nAdminUsersForm.propTypes = {\n  values: PropTypes.object.isRequired,\n  touched: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  isSubmitting: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n  }),\n  validationSchema: yup.object().shape({\n    email: yup\n      .string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n  }),\n\n  handleSubmit: (values, { setSubmitting, props }) => {\n    // console.log('handle submit', values, props);\n    props.onSubmit(values).finally(() => {\n      setSubmitting(false);\n    });\n  },\n  displayName: 'AdminUsersForm', // helps with React DevTools\n})(AdminUsersForm);\n","/Users/permindersingh/Projects/reviews-system/app/src/components/ProjectDashboardHero.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectPages.js",["609"],"import { useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { filter } from 'lodash';\n\nconst pagesQuery = gql`\n  query pages($projectId: ID!) {\n    pages(projectId: $projectId) {\n      id\n      slug\n      name\n      content\n      type\n      status\n      createdAt\n    }\n  }\n`;\n\nconst useProjectPages = projectId => {\n  // fetch pages\n  const [getPages, resultPages] = useLazyQuery(pagesQuery, {\n    variables: { projectId },\n    fetchPolicy: 'network-only',\n  });\n\n  useEffect(() => {\n    if (projectId) {\n      getPages();\n    }\n  }, [projectId, getPages]);\n\n  const pages =\n    resultPages.data && resultPages.data.pages ? resultPages.data.pages : [];\n  const contentPages = filter(pages, { type: 'content' });\n  const dataRoomPages = filter(pages, { type: 'dataroom' });\n\n  return [{ pages, contentPages, dataRoomPages }, resultPages];\n};\n\nexport default useProjectPages;\n","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectUpdate.js",[],"/Users/permindersingh/Projects/reviews-system/app/src/utils/helpers.js",["610"],"import currency from 'currency.js';\n\nimport config from './config';\n\nexport const formatCurrency = value =>\n  currency(parseFloat(value), {\n    symbol: `${config.currency}`,\n    formatWithSymbol: true,\n  }).format();\n\nexport const log = value => console.log(value); // eslint-disable-line\n","/Users/permindersingh/Projects/reviews-system/app/src/hooks/useProjectGuestDetails.js",[],{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","replacedBy":"614"},{"ruleId":"615","replacedBy":"616"},{"ruleId":"617","replacedBy":"618"},{"ruleId":"619","replacedBy":"620"},{"ruleId":"621","replacedBy":"622"},{"ruleId":"623","severity":1,"message":"624","line":15,"column":5,"nodeType":"625","messageId":"626","endLine":15,"endColumn":16},{"ruleId":"627","severity":2,"message":"628","line":40,"column":9,"nodeType":"629","messageId":"630","endLine":40,"endColumn":32},{"ruleId":"623","severity":1,"message":"624","line":45,"column":11,"nodeType":"625","messageId":"626","endLine":45,"endColumn":22},{"ruleId":"627","severity":2,"message":"631","line":52,"column":9,"nodeType":"629","messageId":"630","endLine":52,"endColumn":24},{"ruleId":"632","severity":2,"message":"633","line":62,"column":7,"nodeType":"629","messageId":"634","endLine":62,"endColumn":19},{"ruleId":"623","severity":1,"message":"624","line":73,"column":15,"nodeType":"625","messageId":"626","endLine":73,"endColumn":26},{"ruleId":"623","severity":1,"message":"624","line":105,"column":15,"nodeType":"625","messageId":"626","endLine":105,"endColumn":26},{"ruleId":"623","severity":1,"message":"624","line":117,"column":7,"nodeType":"625","messageId":"626","endLine":117,"endColumn":20},{"ruleId":"623","severity":1,"message":"624","line":143,"column":7,"nodeType":"625","messageId":"626","endLine":143,"endColumn":18},{"ruleId":"623","severity":1,"message":"624","line":32,"column":5,"nodeType":"625","messageId":"626","endLine":32,"endColumn":16},{"ruleId":"635","severity":2,"message":"636","line":38,"column":7,"nodeType":"637","endLine":38,"endColumn":16},{"ruleId":"635","severity":2,"message":"636","line":46,"column":27,"nodeType":"637","endLine":46,"endColumn":37},{"ruleId":"638","severity":2,"message":"639","line":7,"column":20,"nodeType":"640","messageId":"641","endLine":24,"endColumn":2,"fix":"642"},{"ruleId":"643","severity":2,"message":"644","line":11,"column":8,"nodeType":"629","messageId":"645","endLine":11,"endColumn":18},{"ruleId":"646","severity":2,"message":"647","line":11,"column":24,"nodeType":"648","endLine":11,"endColumn":58},{"ruleId":"649","severity":2,"message":"650","line":44,"column":18,"nodeType":null,"endLine":44,"endColumn":23,"fix":"651"},{"ruleId":"649","severity":2,"message":"652","line":69,"column":5,"nodeType":null,"endLine":69,"endColumn":12,"fix":"653"},{"ruleId":"649","severity":2,"message":"654","line":71,"column":37,"nodeType":null,"endLine":71,"endColumn":45,"fix":"655"},{"ruleId":"649","severity":2,"message":"656","line":72,"column":39,"nodeType":null,"endLine":72,"endColumn":44,"fix":"657"},{"ruleId":"649","severity":2,"message":"658","line":129,"column":31,"nodeType":null,"endLine":129,"endColumn":35,"fix":"659"},{"ruleId":"638","severity":2,"message":"639","line":6,"column":24,"nodeType":"640","messageId":"641","endLine":18,"endColumn":2,"fix":"660"},{"ruleId":"649","severity":2,"message":"650","line":66,"column":25,"nodeType":null,"endLine":66,"endColumn":30,"fix":"661"},{"ruleId":"649","severity":2,"message":"658","line":90,"column":25,"nodeType":null,"endLine":90,"endColumn":29,"fix":"662"},{"ruleId":"663","severity":2,"message":"664","line":122,"column":15,"nodeType":"665","endLine":149,"endColumn":32,"fix":"666"},{"ruleId":"667","severity":2,"message":"668","line":129,"column":23,"nodeType":"669","endLine":129,"endColumn":27},{"ruleId":"670","severity":2,"message":"671","line":129,"column":23,"nodeType":"669","endLine":129,"endColumn":27,"fix":"672"},{"ruleId":"649","severity":2,"message":"673","line":133,"column":47,"nodeType":null,"endLine":133,"endColumn":51,"fix":"674"},{"ruleId":"649","severity":2,"message":"650","line":49,"column":25,"nodeType":null,"endLine":49,"endColumn":30,"fix":"675"},{"ruleId":"649","severity":2,"message":"658","line":73,"column":31,"nodeType":null,"endLine":73,"endColumn":35,"fix":"676"},{"ruleId":"663","severity":2,"message":"664","line":86,"column":15,"nodeType":"665","endLine":122,"endColumn":32,"fix":"677"},{"ruleId":"649","severity":2,"message":"673","line":96,"column":46,"nodeType":null,"endLine":96,"endColumn":50,"fix":"678"},{"ruleId":"649","severity":2,"message":"679","line":106,"column":45,"nodeType":null,"endLine":106,"endColumn":50,"fix":"680"},{"ruleId":"646","severity":2,"message":"681","line":9,"column":36,"nodeType":"648","endLine":9,"endColumn":69},{"ruleId":"682","severity":2,"message":"683","line":9,"column":36,"nodeType":"648","endLine":9,"endColumn":69},{"ruleId":"649","severity":2,"message":"650","line":57,"column":18,"nodeType":null,"endLine":57,"endColumn":23,"fix":"684"},{"ruleId":"649","severity":2,"message":"650","line":64,"column":16,"nodeType":null,"endLine":64,"endColumn":21,"fix":"685"},{"ruleId":"649","severity":2,"message":"652","line":81,"column":5,"nodeType":null,"endLine":81,"endColumn":12,"fix":"686"},{"ruleId":"649","severity":2,"message":"656","line":83,"column":39,"nodeType":null,"endLine":83,"endColumn":44,"fix":"687"},{"ruleId":"643","severity":2,"message":"688","line":84,"column":22,"nodeType":"629","messageId":"645","endLine":84,"endColumn":27},{"ruleId":"649","severity":2,"message":"658","line":144,"column":37,"nodeType":null,"endLine":144,"endColumn":41,"fix":"689"},{"ruleId":"649","severity":2,"message":"658","line":30,"column":23,"nodeType":null,"endLine":30,"endColumn":27,"fix":"690"},{"ruleId":"638","severity":2,"message":"639","line":6,"column":20,"nodeType":"640","messageId":"641","endLine":15,"endColumn":2,"fix":"691"},{"ruleId":"649","severity":2,"message":"652","line":73,"column":5,"nodeType":null,"endLine":73,"endColumn":12,"fix":"692"},{"ruleId":"649","severity":2,"message":"658","line":98,"column":31,"nodeType":null,"endLine":98,"endColumn":35,"fix":"693"},{"ruleId":"649","severity":2,"message":"658","line":116,"column":35,"nodeType":null,"endLine":116,"endColumn":39,"fix":"694"},{"ruleId":"646","severity":2,"message":"695","line":16,"column":28,"nodeType":"648","endLine":16,"endColumn":61},{"ruleId":"682","severity":2,"message":"696","line":16,"column":28,"nodeType":"648","endLine":16,"endColumn":61},{"ruleId":"649","severity":2,"message":"697","line":79,"column":17,"nodeType":null,"endLine":80,"endColumn":13,"fix":"698"},{"ruleId":"646","severity":2,"message":"699","line":6,"column":30,"nodeType":"648","endLine":6,"endColumn":60},{"ruleId":"682","severity":2,"message":"700","line":6,"column":30,"nodeType":"648","endLine":6,"endColumn":60},{"ruleId":"646","severity":2,"message":"695","line":15,"column":28,"nodeType":"648","endLine":15,"endColumn":61},{"ruleId":"682","severity":2,"message":"696","line":15,"column":28,"nodeType":"648","endLine":15,"endColumn":61},{"ruleId":"649","severity":2,"message":"658","line":51,"column":33,"nodeType":null,"endLine":51,"endColumn":37,"fix":"701"},{"ruleId":"649","severity":2,"message":"673","line":41,"column":28,"nodeType":null,"endLine":41,"endColumn":32,"fix":"702"},{"ruleId":"703","severity":1,"message":"704","line":45,"column":21,"nodeType":"705","endLine":45,"endColumn":73},{"ruleId":"649","severity":2,"message":"650","line":59,"column":14,"nodeType":null,"endLine":59,"endColumn":19,"fix":"706"},{"ruleId":"649","severity":2,"message":"650","line":63,"column":25,"nodeType":null,"endLine":63,"endColumn":30,"fix":"707"},{"ruleId":"649","severity":2,"message":"658","line":87,"column":31,"nodeType":null,"endLine":87,"endColumn":35,"fix":"708"},{"ruleId":"649","severity":2,"message":"673","line":114,"column":46,"nodeType":null,"endLine":114,"endColumn":50,"fix":"709"},{"ruleId":"649","severity":2,"message":"679","line":125,"column":43,"nodeType":null,"endLine":125,"endColumn":48,"fix":"710"},{"ruleId":"649","severity":2,"message":"658","line":64,"column":33,"nodeType":null,"endLine":64,"endColumn":37,"fix":"711"},{"ruleId":"646","severity":2,"message":"681","line":8,"column":36,"nodeType":"648","endLine":8,"endColumn":69},{"ruleId":"682","severity":2,"message":"683","line":8,"column":36,"nodeType":"648","endLine":8,"endColumn":69},{"ruleId":"649","severity":2,"message":"650","line":60,"column":18,"nodeType":null,"endLine":60,"endColumn":23,"fix":"712"},{"ruleId":"649","severity":2,"message":"650","line":67,"column":16,"nodeType":null,"endLine":67,"endColumn":21,"fix":"713"},{"ruleId":"649","severity":2,"message":"652","line":81,"column":5,"nodeType":null,"endLine":81,"endColumn":12,"fix":"714"},{"ruleId":"649","severity":2,"message":"652","line":83,"column":38,"nodeType":null,"endLine":83,"endColumn":45,"fix":"715"},{"ruleId":"649","severity":2,"message":"652","line":85,"column":5,"nodeType":null,"endLine":85,"endColumn":12,"fix":"716"},{"ruleId":"649","severity":2,"message":"656","line":87,"column":39,"nodeType":null,"endLine":87,"endColumn":44,"fix":"717"},{"ruleId":"649","severity":2,"message":"658","line":161,"column":31,"nodeType":null,"endLine":161,"endColumn":35,"fix":"718"},{"ruleId":"638","severity":2,"message":"639","line":161,"column":39,"nodeType":"640","messageId":"641","endLine":174,"endColumn":22,"fix":"719"},{"ruleId":"638","severity":2,"message":"639","line":6,"column":26,"nodeType":"640","messageId":"641","endLine":20,"endColumn":2,"fix":"720"},{"ruleId":"646","severity":2,"message":"721","line":14,"column":24,"nodeType":"648","endLine":14,"endColumn":53},{"ruleId":"682","severity":2,"message":"722","line":14,"column":24,"nodeType":"648","endLine":14,"endColumn":53},{"ruleId":"649","severity":2,"message":"650","line":5,"column":12,"nodeType":null,"endLine":5,"endColumn":17,"fix":"723"},{"ruleId":"649","severity":2,"message":"650","line":7,"column":14,"nodeType":null,"endLine":7,"endColumn":19,"fix":"724"},{"ruleId":"649","severity":2,"message":"650","line":10,"column":14,"nodeType":null,"endLine":10,"endColumn":19,"fix":"725"},{"ruleId":"649","severity":2,"message":"650","line":17,"column":17,"nodeType":null,"endLine":17,"endColumn":22,"fix":"726"},{"ruleId":"649","severity":2,"message":"650","line":19,"column":18,"nodeType":null,"endLine":19,"endColumn":23,"fix":"727"},{"ruleId":"649","severity":2,"message":"650","line":21,"column":19,"nodeType":null,"endLine":21,"endColumn":24,"fix":"728"},{"ruleId":"649","severity":2,"message":"650","line":25,"column":20,"nodeType":null,"endLine":25,"endColumn":25,"fix":"729"},{"ruleId":"649","severity":2,"message":"650","line":26,"column":20,"nodeType":null,"endLine":26,"endColumn":25,"fix":"730"},{"ruleId":"635","severity":2,"message":"636","line":82,"column":45,"nodeType":"637","endLine":82,"endColumn":60},{"ruleId":"649","severity":2,"message":"650","line":7,"column":12,"nodeType":null,"endLine":7,"endColumn":17,"fix":"731"},{"ruleId":"649","severity":2,"message":"650","line":6,"column":14,"nodeType":null,"endLine":6,"endColumn":19,"fix":"732"},{"ruleId":"649","severity":2,"message":"650","line":9,"column":14,"nodeType":null,"endLine":9,"endColumn":19,"fix":"733"},{"ruleId":"649","severity":2,"message":"650","line":15,"column":17,"nodeType":null,"endLine":15,"endColumn":22,"fix":"734"},{"ruleId":"649","severity":2,"message":"650","line":17,"column":18,"nodeType":null,"endLine":17,"endColumn":23,"fix":"735"},{"ruleId":"649","severity":2,"message":"650","line":19,"column":19,"nodeType":null,"endLine":19,"endColumn":24,"fix":"736"},{"ruleId":"649","severity":2,"message":"650","line":21,"column":20,"nodeType":null,"endLine":21,"endColumn":25,"fix":"737"},{"ruleId":"649","severity":2,"message":"650","line":24,"column":20,"nodeType":null,"endLine":24,"endColumn":25,"fix":"738"},{"ruleId":"635","severity":2,"message":"636","line":49,"column":17,"nodeType":"637","endLine":49,"endColumn":32},{"ruleId":"649","severity":2,"message":"739","line":51,"column":24,"nodeType":null,"endLine":51,"endColumn":30,"fix":"740"},{"ruleId":"638","severity":2,"message":"639","line":12,"column":32,"nodeType":"640","messageId":"641","endLine":18,"endColumn":2,"fix":"741"},{"ruleId":"649","severity":2,"message":"650","line":8,"column":7,"nodeType":null,"endLine":8,"endColumn":12,"fix":"742"},{"ruleId":"649","severity":2,"message":"650","line":9,"column":19,"nodeType":null,"endLine":9,"endColumn":24,"fix":"743"},{"ruleId":"649","severity":2,"message":"744","line":11,"column":14,"nodeType":null,"endLine":11,"endColumn":78,"fix":"745"},{"ruleId":"649","severity":2,"message":"650","line":12,"column":21,"nodeType":null,"endLine":12,"endColumn":26,"fix":"746"},{"ruleId":"649","severity":2,"message":"650","line":13,"column":22,"nodeType":null,"endLine":13,"endColumn":27,"fix":"747"},{"ruleId":"649","severity":2,"message":"650","line":14,"column":20,"nodeType":null,"endLine":14,"endColumn":25,"fix":"748"},{"ruleId":"649","severity":2,"message":"650","line":15,"column":23,"nodeType":null,"endLine":15,"endColumn":28,"fix":"749"},{"ruleId":"649","severity":2,"message":"650","line":16,"column":22,"nodeType":null,"endLine":16,"endColumn":27,"fix":"750"},{"ruleId":"649","severity":2,"message":"650","line":18,"column":20,"nodeType":null,"endLine":18,"endColumn":25,"fix":"751"},{"ruleId":"649","severity":2,"message":"650","line":19,"column":15,"nodeType":null,"endLine":19,"endColumn":20,"fix":"752"},{"ruleId":"649","severity":2,"message":"650","line":20,"column":25,"nodeType":null,"endLine":20,"endColumn":30,"fix":"753"},{"ruleId":"649","severity":2,"message":"650","line":22,"column":20,"nodeType":null,"endLine":22,"endColumn":25,"fix":"754"},{"ruleId":"649","severity":2,"message":"650","line":24,"column":18,"nodeType":null,"endLine":24,"endColumn":23,"fix":"755"},{"ruleId":"649","severity":2,"message":"650","line":26,"column":21,"nodeType":null,"endLine":26,"endColumn":26,"fix":"756"},{"ruleId":"649","severity":2,"message":"650","line":29,"column":16,"nodeType":null,"endLine":29,"endColumn":21,"fix":"757"},{"ruleId":"649","severity":2,"message":"650","line":33,"column":21,"nodeType":null,"endLine":33,"endColumn":26,"fix":"758"},{"ruleId":"635","severity":2,"message":"636","line":59,"column":7,"nodeType":"637","endLine":59,"endColumn":22},{"ruleId":"649","severity":2,"message":"650","line":8,"column":20,"nodeType":null,"endLine":8,"endColumn":25,"fix":"759"},{"ruleId":"670","severity":2,"message":"671","line":34,"column":9,"nodeType":"669","endLine":34,"endColumn":37,"fix":"760"},{"ruleId":"649","severity":2,"message":"761","line":13,"column":27,"nodeType":null,"endLine":13,"endColumn":38,"fix":"762"},{"ruleId":"649","severity":2,"message":"763","line":14,"column":5,"nodeType":null,"endLine":14,"endColumn":8,"fix":"764"},{"ruleId":"649","severity":2,"message":"765","line":16,"column":32,"nodeType":null,"endLine":17,"endColumn":3,"fix":"766"},{"ruleId":"643","severity":2,"message":"767","line":2,"column":10,"nodeType":"629","messageId":"645","endLine":2,"endColumn":22},{"ruleId":"635","severity":2,"message":"636","line":74,"column":15,"nodeType":"637","endLine":74,"endColumn":30},{"ruleId":"649","severity":2,"message":"650","line":6,"column":14,"nodeType":null,"endLine":6,"endColumn":19,"fix":"768"},{"ruleId":"649","severity":2,"message":"650","line":9,"column":14,"nodeType":null,"endLine":9,"endColumn":19,"fix":"769"},{"ruleId":"649","severity":2,"message":"650","line":15,"column":17,"nodeType":null,"endLine":15,"endColumn":22,"fix":"770"},{"ruleId":"649","severity":2,"message":"650","line":17,"column":18,"nodeType":null,"endLine":17,"endColumn":23,"fix":"771"},{"ruleId":"649","severity":2,"message":"650","line":19,"column":19,"nodeType":null,"endLine":19,"endColumn":24,"fix":"772"},{"ruleId":"649","severity":2,"message":"650","line":21,"column":20,"nodeType":null,"endLine":21,"endColumn":25,"fix":"773"},{"ruleId":"649","severity":2,"message":"650","line":22,"column":20,"nodeType":null,"endLine":22,"endColumn":25,"fix":"774"},{"ruleId":"635","severity":2,"message":"636","line":45,"column":38,"nodeType":"637","endLine":45,"endColumn":53},{"ruleId":"646","severity":2,"message":"681","line":8,"column":36,"nodeType":"648","endLine":8,"endColumn":69},{"ruleId":"682","severity":2,"message":"683","line":8,"column":36,"nodeType":"648","endLine":8,"endColumn":69},{"ruleId":"643","severity":2,"message":"775","line":9,"column":8,"nodeType":"629","messageId":"645","endLine":9,"endColumn":18},{"ruleId":"649","severity":2,"message":"652","line":20,"column":40,"nodeType":null,"endLine":20,"endColumn":47,"fix":"776"},{"ruleId":"649","severity":2,"message":"656","line":21,"column":32,"nodeType":null,"endLine":21,"endColumn":37,"fix":"777"},{"ruleId":"649","severity":2,"message":"652","line":24,"column":5,"nodeType":null,"endLine":24,"endColumn":12,"fix":"778"},{"ruleId":"649","severity":2,"message":"650","line":8,"column":12,"nodeType":null,"endLine":8,"endColumn":17,"fix":"779"},{"ruleId":"670","severity":2,"message":"671","line":13,"column":5,"nodeType":"669","endLine":13,"endColumn":37,"fix":"780"},{"ruleId":"649","severity":2,"message":"650","line":10,"column":17,"nodeType":null,"endLine":10,"endColumn":22,"fix":"781"},{"ruleId":"670","severity":2,"message":"671","line":52,"column":33,"nodeType":"669","endLine":52,"endColumn":56,"fix":"782"},{"ruleId":"649","severity":2,"message":"656","line":60,"column":34,"nodeType":null,"endLine":60,"endColumn":39,"fix":"783"},{"ruleId":"649","severity":2,"message":"656","line":61,"column":39,"nodeType":null,"endLine":61,"endColumn":44,"fix":"784"},{"ruleId":"649","severity":2,"message":"650","line":10,"column":23,"nodeType":null,"endLine":10,"endColumn":28,"fix":"785"},{"ruleId":"649","severity":2,"message":"650","line":12,"column":25,"nodeType":null,"endLine":12,"endColumn":30,"fix":"786"},{"ruleId":"649","severity":2,"message":"650","line":18,"column":25,"nodeType":null,"endLine":18,"endColumn":30,"fix":"787"},{"ruleId":"643","severity":2,"message":"788","line":27,"column":7,"nodeType":"629","messageId":"645","endLine":27,"endColumn":15},{"ruleId":"649","severity":2,"message":"650","line":71,"column":20,"nodeType":null,"endLine":71,"endColumn":25,"fix":"789"},{"ruleId":"649","severity":2,"message":"656","line":82,"column":34,"nodeType":null,"endLine":82,"endColumn":39,"fix":"790"},{"ruleId":"670","severity":2,"message":"671","line":107,"column":17,"nodeType":"669","endLine":107,"endColumn":42,"fix":"791"},{"ruleId":"670","severity":2,"message":"671","line":108,"column":17,"nodeType":"669","endLine":108,"endColumn":42,"fix":"792"},{"ruleId":"670","severity":2,"message":"671","line":109,"column":17,"nodeType":"669","endLine":109,"endColumn":42,"fix":"793"},{"ruleId":"670","severity":2,"message":"671","line":117,"column":23,"nodeType":"669","endLine":117,"endColumn":55,"fix":"794"},{"ruleId":"670","severity":2,"message":"671","line":139,"column":23,"nodeType":"669","endLine":139,"endColumn":49,"fix":"795"},{"ruleId":"670","severity":2,"message":"671","line":143,"column":21,"nodeType":"669","endLine":143,"endColumn":53,"fix":"796"},{"ruleId":"670","severity":2,"message":"671","line":167,"column":17,"nodeType":"669","endLine":167,"endColumn":42,"fix":"797"},{"ruleId":"670","severity":2,"message":"671","line":168,"column":17,"nodeType":"669","endLine":168,"endColumn":42,"fix":"798"},{"ruleId":"670","severity":2,"message":"671","line":169,"column":17,"nodeType":"669","endLine":169,"endColumn":42,"fix":"799"},{"ruleId":"670","severity":2,"message":"671","line":181,"column":25,"nodeType":"669","endLine":181,"endColumn":51,"fix":"800"},{"ruleId":"670","severity":2,"message":"671","line":185,"column":23,"nodeType":"669","endLine":185,"endColumn":55,"fix":"801"},{"ruleId":"649","severity":2,"message":"650","line":15,"column":22,"nodeType":null,"endLine":15,"endColumn":27,"fix":"802"},{"ruleId":"649","severity":2,"message":"803","line":204,"column":66,"nodeType":null,"endLine":204,"endColumn":66,"fix":"804"},{"ruleId":"649","severity":2,"message":"650","line":4,"column":18,"nodeType":null,"endLine":4,"endColumn":23,"fix":"805"},{"ruleId":"649","severity":2,"message":"650","line":5,"column":19,"nodeType":null,"endLine":5,"endColumn":24,"fix":"806"},{"ruleId":"649","severity":2,"message":"650","line":7,"column":18,"nodeType":null,"endLine":7,"endColumn":23,"fix":"807"},{"ruleId":"649","severity":2,"message":"650","line":9,"column":25,"nodeType":null,"endLine":9,"endColumn":30,"fix":"808"},{"ruleId":"643","severity":2,"message":"809","line":65,"column":10,"nodeType":"629","messageId":"645","endLine":65,"endColumn":18},{"ruleId":"643","severity":2,"message":"810","line":70,"column":9,"nodeType":"629","messageId":"645","endLine":70,"endColumn":25},{"ruleId":"649","severity":2,"message":"811","line":49,"column":27,"nodeType":null,"endLine":49,"endColumn":36,"fix":"812"},{"ruleId":"649","severity":2,"message":"652","line":52,"column":5,"nodeType":null,"endLine":52,"endColumn":12,"fix":"813"},{"ruleId":"649","severity":2,"message":"650","line":8,"column":22,"nodeType":null,"endLine":8,"endColumn":27,"fix":"814"},{"ruleId":"649","severity":2,"message":"650","line":9,"column":28,"nodeType":null,"endLine":9,"endColumn":33,"fix":"815"},{"ruleId":"670","severity":2,"message":"671","line":29,"column":7,"nodeType":"669","endLine":43,"endColumn":41,"fix":"816"},{"ruleId":"649","severity":2,"message":"817","line":96,"column":21,"nodeType":null,"endLine":96,"endColumn":24,"fix":"818"},{"ruleId":"649","severity":2,"message":"650","line":24,"column":25,"nodeType":null,"endLine":24,"endColumn":30,"fix":"819"},{"ruleId":"643","severity":2,"message":"820","line":2,"column":8,"nodeType":"629","messageId":"645","endLine":2,"endColumn":17},{"ruleId":"649","severity":2,"message":"650","line":11,"column":27,"nodeType":null,"endLine":11,"endColumn":32,"fix":"821"},{"ruleId":"638","severity":2,"message":"639","line":42,"column":41,"nodeType":"640","messageId":"641","endLine":60,"endColumn":2,"fix":"822"},{"ruleId":"649","severity":2,"message":"650","line":59,"column":26,"nodeType":null,"endLine":59,"endColumn":31,"fix":"823"},{"ruleId":"824","severity":2,"message":"825","line":80,"column":26,"nodeType":"640","messageId":"826"},{"ruleId":"649","severity":2,"message":"673","line":85,"column":21,"nodeType":null,"endLine":85,"endColumn":25,"fix":"827"},{"ruleId":"828","severity":2,"message":"829","line":85,"column":26,"nodeType":"640","messageId":"830","endLine":85,"endColumn":28},{"ruleId":"831","severity":2,"message":"832","line":86,"column":21,"nodeType":"833","messageId":"626","endLine":86,"endColumn":23},{"ruleId":"649","severity":2,"message":"834","line":343,"column":27,"nodeType":null,"endLine":343,"endColumn":28,"fix":"835"},{"ruleId":"831","severity":2,"message":"832","line":356,"column":23,"nodeType":"833","messageId":"626","endLine":356,"endColumn":25},{"ruleId":"670","severity":2,"message":"671","line":374,"column":11,"nodeType":"669","endLine":374,"endColumn":35,"fix":"836"},{"ruleId":"646","severity":2,"message":"837","line":9,"column":32,"nodeType":"648","endLine":9,"endColumn":50},{"ruleId":"682","severity":2,"message":"838","line":9,"column":32,"nodeType":"648","endLine":9,"endColumn":50},{"ruleId":"670","severity":2,"message":"671","line":24,"column":18,"nodeType":"669","endLine":24,"endColumn":52,"fix":"839"},{"ruleId":"649","severity":2,"message":"840","line":58,"column":71,"nodeType":null,"endLine":59,"endColumn":7,"fix":"841"},{"ruleId":"649","severity":2,"message":"650","line":6,"column":21,"nodeType":null,"endLine":6,"endColumn":26,"fix":"842"},{"ruleId":"643","severity":2,"message":"843","line":4,"column":8,"nodeType":"629","messageId":"645","endLine":4,"endColumn":12},{"ruleId":"649","severity":2,"message":"650","line":10,"column":16,"nodeType":null,"endLine":10,"endColumn":21,"fix":"844"},{"ruleId":"643","severity":2,"message":"845","line":15,"column":7,"nodeType":"629","messageId":"645","endLine":15,"endColumn":11},{"ruleId":"643","severity":2,"message":"846","line":21,"column":23,"nodeType":"629","messageId":"645","endLine":21,"endColumn":36},{"ruleId":"643","severity":2,"message":"846","line":25,"column":23,"nodeType":"629","messageId":"645","endLine":25,"endColumn":36},{"ruleId":"670","severity":2,"message":"671","line":44,"column":13,"nodeType":"669","endLine":44,"endColumn":38,"fix":"847"},{"ruleId":"670","severity":2,"message":"671","line":45,"column":13,"nodeType":"669","endLine":45,"endColumn":38,"fix":"848"},{"ruleId":"670","severity":2,"message":"671","line":46,"column":13,"nodeType":"669","endLine":46,"endColumn":38,"fix":"849"},{"ruleId":"670","severity":2,"message":"671","line":51,"column":11,"nodeType":"669","endLine":51,"endColumn":41,"fix":"850"},{"ruleId":"703","severity":1,"message":"704","line":31,"column":9,"nodeType":"705","endLine":31,"endColumn":75},{"ruleId":"649","severity":2,"message":"650","line":8,"column":21,"nodeType":null,"endLine":8,"endColumn":26,"fix":"851"},{"ruleId":"643","severity":2,"message":"852","line":5,"column":8,"nodeType":"629","messageId":"645","endLine":5,"endColumn":14},{"ruleId":"649","severity":2,"message":"650","line":9,"column":28,"nodeType":null,"endLine":9,"endColumn":33,"fix":"853"},{"ruleId":"649","severity":2,"message":"650","line":8,"column":18,"nodeType":null,"endLine":8,"endColumn":23,"fix":"854"},{"ruleId":"649","severity":2,"message":"650","line":13,"column":16,"nodeType":null,"endLine":13,"endColumn":21,"fix":"855"},{"ruleId":"649","severity":2,"message":"650","line":18,"column":19,"nodeType":null,"endLine":18,"endColumn":24,"fix":"856"},{"ruleId":"649","severity":2,"message":"650","line":7,"column":23,"nodeType":null,"endLine":7,"endColumn":28,"fix":"857"},{"ruleId":"649","severity":2,"message":"650","line":8,"column":25,"nodeType":null,"endLine":8,"endColumn":30,"fix":"858"},{"ruleId":"643","severity":2,"message":"859","line":93,"column":10,"nodeType":"629","messageId":"645","endLine":93,"endColumn":22},{"ruleId":"643","severity":2,"message":"860","line":94,"column":10,"nodeType":"629","messageId":"645","endLine":94,"endColumn":26},{"ruleId":"643","severity":2,"message":"861","line":98,"column":12,"nodeType":"629","messageId":"645","endLine":98,"endColumn":17},{"ruleId":"643","severity":2,"message":"862","line":98,"column":21,"nodeType":"629","messageId":"645","endLine":98,"endColumn":32},{"ruleId":"643","severity":2,"message":"863","line":100,"column":9,"nodeType":"629","messageId":"645","endLine":100,"endColumn":27},{"ruleId":"649","severity":2,"message":"673","line":52,"column":34,"nodeType":null,"endLine":52,"endColumn":38,"fix":"864"},{"ruleId":"649","severity":2,"message":"679","line":62,"column":37,"nodeType":null,"endLine":62,"endColumn":42,"fix":"865"},{"ruleId":"649","severity":2,"message":"658","line":84,"column":25,"nodeType":null,"endLine":84,"endColumn":29,"fix":"866"},{"ruleId":"649","severity":2,"message":"650","line":13,"column":24,"nodeType":null,"endLine":13,"endColumn":29,"fix":"867"},{"ruleId":"649","severity":2,"message":"811","line":20,"column":25,"nodeType":null,"endLine":20,"endColumn":34,"fix":"868"},{"ruleId":"649","severity":2,"message":"679","line":5,"column":31,"nodeType":null,"endLine":5,"endColumn":36,"fix":"869"},"import/imports-first",[],"lines-around-directive",["870"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-use-before-define","'checkValidServiceWorker' was used before it was defined.","Identifier","usedBeforeDefined","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","ArrowFunctionExpression","unexpectedSingleBlock",{"range":"871","text":"872"},"no-unused-vars","'background' is defined but never used.","unusedVar","import/no-unresolved","Unable to resolve path to module '../assets/images/intelliback.jpg'.","Literal","prettier/prettier","Replace `props` with `(props)`",{"range":"873","text":"874"},"Replace `actions` with `(actions)`",{"range":"875","text":"876"},"Replace `(actions` with `((actions)`",{"range":"877","text":"878"},"Replace `state` with `(state)`",{"range":"879","text":"880"},"Replace `data` with `(data)`",{"range":"881","text":"882"},{"range":"883","text":"884"},{"range":"885","text":"874"},{"range":"886","text":"882"},"react/jsx-fragments","Prefer fragment shorthand over React.Fragment","JSXElement",{"range":"887","text":"888"},"jsx-a11y/control-has-associated-label","A control must be associated with a text label.","JSXOpeningElement","react/self-closing-comp","Empty components are self-closing",{"range":"889","text":"890"},"Replace `item` with `(item)`",{"range":"891","text":"892"},{"range":"893","text":"874"},{"range":"894","text":"882"},{"range":"895","text":"896"},{"range":"897","text":"892"},"Replace `value` with `(value)`",{"range":"898","text":"899"},"Unable to resolve path to module '../hooks/useProjectGuestDetails'.","import/extensions","Missing file extension for \"../hooks/useProjectGuestDetails\"",{"range":"900","text":"874"},{"range":"901","text":"874"},{"range":"902","text":"876"},{"range":"903","text":"880"},"'email' is assigned a value but never used.",{"range":"904","text":"882"},{"range":"905","text":"882"},{"range":"906","text":"907"},{"range":"908","text":"876"},{"range":"909","text":"882"},{"range":"910","text":"882"},"Unable to resolve path to module '../../components/AdminSubHeader'.","Missing file extension for \"../../components/AdminSubHeader\"","Delete `⏎············`",{"range":"911","text":"912"},"Unable to resolve path to module '../../hooks/useProjectUpdate'.","Missing file extension for \"../../hooks/useProjectUpdate\"",{"range":"913","text":"882"},{"range":"914","text":"892"},"react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute",{"range":"915","text":"874"},{"range":"916","text":"874"},{"range":"917","text":"882"},{"range":"918","text":"892"},{"range":"919","text":"899"},{"range":"920","text":"882"},{"range":"921","text":"874"},{"range":"922","text":"874"},{"range":"923","text":"876"},{"range":"924","text":"876"},{"range":"925","text":"876"},{"range":"926","text":"880"},{"range":"927","text":"882"},{"range":"928","text":"929"},{"range":"930","text":"931"},"Unable to resolve path to module '../../components/AdminUsers'.","Missing file extension for \"../../components/AdminUsers\"",{"range":"932","text":"874"},{"range":"933","text":"874"},{"range":"934","text":"874"},{"range":"935","text":"874"},{"range":"936","text":"874"},{"range":"937","text":"874"},{"range":"938","text":"874"},{"range":"939","text":"874"},{"range":"940","text":"874"},{"range":"941","text":"874"},{"range":"942","text":"874"},{"range":"943","text":"874"},{"range":"944","text":"874"},{"range":"945","text":"874"},{"range":"946","text":"874"},{"range":"947","text":"874"},"Replace `option` with `(option)`",{"range":"948","text":"949"},{"range":"950","text":"951"},{"range":"952","text":"874"},{"range":"953","text":"874"},"Replace `props·=>·(props.paddingless·?·props.theme.primaryColor·:·'#fff')` with `(props)·=>⏎······props.paddingless·?·props.theme.primaryColor·:·'#fff'`",{"range":"954","text":"955"},{"range":"956","text":"874"},{"range":"957","text":"874"},{"range":"958","text":"874"},{"range":"959","text":"874"},{"range":"960","text":"874"},{"range":"961","text":"874"},{"range":"962","text":"874"},{"range":"963","text":"874"},{"range":"964","text":"874"},{"range":"965","text":"874"},{"range":"966","text":"874"},{"range":"967","text":"874"},{"range":"968","text":"874"},{"range":"969","text":"874"},{"range":"970","text":"890"},"Replace `fontSize·||` with `⏎······fontSize·||·5`",{"range":"971","text":"972"},"Delete `··5`",{"range":"973","text":"912"},"Delete `⏎··`",{"range":"974","text":"912"},"'SketchPicker' is defined but never used.",{"range":"975","text":"874"},{"range":"976","text":"874"},{"range":"977","text":"874"},{"range":"978","text":"874"},{"range":"979","text":"874"},{"range":"980","text":"874"},{"range":"981","text":"874"},"'AuthHeader' is defined but never used.",{"range":"982","text":"876"},{"range":"983","text":"880"},{"range":"984","text":"876"},{"range":"985","text":"874"},{"range":"986","text":"890"},{"range":"987","text":"874"},{"range":"988","text":"890"},{"range":"989","text":"880"},{"range":"990","text":"880"},{"range":"991","text":"874"},{"range":"992","text":"874"},{"range":"993","text":"874"},"'AdminNav' is assigned a value but never used.",{"range":"994","text":"874"},{"range":"995","text":"880"},{"range":"996","text":"890"},{"range":"997","text":"890"},{"range":"998","text":"890"},{"range":"999","text":"890"},{"range":"1000","text":"890"},{"range":"1001","text":"890"},{"range":"1002","text":"890"},{"range":"1003","text":"890"},{"range":"1004","text":"890"},{"range":"1005","text":"890"},{"range":"1006","text":"890"},{"range":"1007","text":"874"},"Insert `·`",{"range":"1008","text":"1009"},{"range":"1010","text":"874"},{"range":"1011","text":"874"},{"range":"1012","text":"874"},{"range":"1013","text":"874"},"'isActive' is assigned a value but never used.","'handleLogoUpload' is assigned a value but never used.","Replace `projectId` with `(projectId)`",{"range":"1014","text":"1015"},{"range":"1016","text":"876"},{"range":"1017","text":"874"},{"range":"1018","text":"874"},{"range":"1019","text":"890"},"Replace `val` with `(val)`",{"range":"1020","text":"1021"},{"range":"1022","text":"874"},"'PropTypes' is defined but never used.",{"range":"1023","text":"874"},{"range":"1024","text":"1025"},{"range":"1026","text":"874"},"consistent-return","Expected to return a value at the end of arrow function.","missingReturn",{"range":"1027","text":"892"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Replace `e` with `(e)`",{"range":"1028","text":"1029"},{"range":"1030","text":"890"},"Unable to resolve path to module '../utils/helpers'.","Missing file extension for \"../utils/helpers\"",{"range":"1031","text":"890"},"Delete `⏎······`",{"range":"1032","text":"912"},{"range":"1033","text":"874"},"'logo' is defined but never used.",{"range":"1034","text":"874"},"'Logo' is assigned a value but never used.","'activeProject' is defined but never used.",{"range":"1035","text":"890"},{"range":"1036","text":"890"},{"range":"1037","text":"890"},{"range":"1038","text":"890"},{"range":"1039","text":"874"},"'styled' is defined but never used.",{"range":"1040","text":"874"},{"range":"1041","text":"874"},{"range":"1042","text":"874"},{"range":"1043","text":"874"},{"range":"1044","text":"874"},{"range":"1045","text":"874"},"'addPageModal' is assigned a value but never used.","'uploadImageModal' is assigned a value but never used.","'pages' is assigned a value but never used.","'resultPages' is assigned a value but never used.","'handleBannerUpload' is assigned a value but never used.",{"range":"1046","text":"892"},{"range":"1047","text":"899"},{"range":"1048","text":"882"},{"range":"1049","text":"874"},{"range":"1050","text":"1015"},{"range":"1051","text":"899"},"padding-line-between-statements",[169,634],"(\n    <Layout>\n      <Seo title=\"Home\" description=\"Some description here.\" />\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"header\">Intellishare</h1>\n          <br />\n          <Link to=\"/login\">Login</Link>\n          <br />\n          <Link to=\"/register\">Register</Link>\n          <br />\n          <Link to=\"/forgot-password\">Forgot Password</Link>\n        </div>\n      </section>\n    </Layout>\n  )",[1058,1063],"(props)",[1500,1507],"(actions)",[1580,1588],"((actions)",[1652,1657],"(state)",[3825,3829],"(data)",[132,447],"(\n    <Layout>\n      <Seo title=\"404 not found\" description=\"Page not found\" />\n      <div className=\"section\">\n        <div className=\"container\">\n          <h2 className=\"title\">404</h2>\n          <p>The page you are looking for, could not be found.</p>\n        </div>\n      </div>\n    </Layout>\n  )",[1398,1403],[2215,2219],[3467,4520],"<>\n                <Title marginTop=\"4rem\">Plans</Title>\n                <table className=\"table is-fullwidth is-hoverable\">\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Price</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {result.data.packages.map(item => (\n                      <tr key={item.id}>\n                        <td>{item.name}</td>\n                        <td>£{item.price}</td>\n                        <td className=\"is-uppercase actions has-text-right\">\n                          <Button\n                            primary\n                            paddingless\n                            onClick={() => setEditClient(item)}>\n                            EDIT\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </>",[3759,3765]," />",[3891,3895],"(item)",[1129,1134],[1867,1871],[2397,3945],"<>\n                {/* <Title marginTop=\"4rem\">Videos</Title> */}\n                <table className=\"table is-fullwidth is-hoverable\">\n                  <thead>\n                    <tr>\n                      <th>Title</th>\n                      <th className=\"has-text-right\">Delete</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {result.data.support.map(item => (\n                      <tr key={item.id}>\n                        <td>{item.name}</td>\n                        <td className=\"is-uppercase actions has-text-right\">\n                          <Button\n                            primary\n                            paddingless\n                            onClick={() => {\n                              swal('Are you confirm to delete this item?', {\n                                buttons: ['Cancel', 'Confirm'],\n                              }).then(async value => {\n                                if (value) {\n                                  await executeMutationRemove({\n                                    variables: { id: item.id },\n                                  });\n                                  result.refetch();\n                                }\n                              });\n                            }}>\n                            DELETE\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </>",[2822,2826],[3335,3340],"(value)",[1345,1350],[1455,1460],[1789,1796],[1873,1878],[4392,4396],[796,800],[128,312],"(\n    <Layout>\n      <Seo title=\"Test\" description=\"Some description here.\" />\n      <div className=\"container\">\n        <h1>Test page</h1>\n      </div>\n    </Layout>\n  )",[2029,2036],[2796,2800],[3578,3582],[2769,2782],"",[1688,1692],[1116,1120],[1255,1260],[1353,1358],[2126,2130],[3221,3225],[3743,3748],[1672,1676],[1310,1315],[1420,1425],[1703,1710],[1784,1791],[1862,1869],[1946,1951],[4826,4830],[4834,5388],"executeMutation({\n                        variables: {\n                          input: {\n                            email: data.email,\n                            password: data.password,\n                            projectId: projectId || undefined,\n                            fullName: data.fullName,\n                            companyName: data.companyName,\n                            telephone: data.telephone,\n                          },\n                        },\n                      })",[134,508],"(\n    <Layout>\n      <Seo title=\"Not Allowed\" description=\"You don't have permission\" />\n      <div className=\"section\">\n        <div className=\"container\">\n          <h2 className=\"title\">Not Allowed</h2>\n          <p>\n            The page you are looking for, is not allowed to be accessed by you.\n          </p>\n        </div>\n      </div>\n    </Layout>\n  )",[105,110],[175,180],[256,261],[414,419],[500,505],[587,592],[760,765],[822,827],[153,158],[120,125],[201,206],[324,329],[410,415],[497,502],[585,590],[732,737],[1315,1321],"(option)",[266,380],"(\n    <Container>\n      <ReactLoading type=\"spin\" color={color || '#363636'} />\n    </Container>\n  )",[155,160],[196,201],[294,358],"(props) =>\n      props.paddingless ? props.theme.primaryColor : '#fff'",[381,386],[451,456],[519,524],[590,595],[660,665],[757,762],[821,826],[889,894],[984,989],[1080,1085],[1167,1172],[1288,1293],[1401,1406],[166,171],[842,850],[421,432],"\n      fontSize || 5",[437,440],[543,546],[120,125],[201,206],[332,337],[418,423],[505,510],[593,598],[655,660],[600,607],[666,671],[805,812],[176,181],[327,332],[294,299],[1119,1127],[1267,1272],[1332,1337],[302,307],[376,381],[519,524],[1410,1415],[1717,1722],[2538,2546],[2587,2595],[2636,2644],[2990,2995],[3782,3787],[3973,3978],[4832,4840],[4881,4889],[4930,4938],[5479,5484],[5684,5689],[396,401],[5886,5886]," ",[89,94],[161,166],[256,261],[241,246],[866,875],"(projectId)",[958,965],[200,205],[272,277],[1075,1089],[2490,2493],"(val)",[494,499],[266,271],[785,1418],"(\n    <Progress>\n      <div className={`step one ${activeStep.stepOne ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">01. Project Setup</span>\n      </div>\n\n      <div className={`step two ${activeStep.stepTwo ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">02. Payment</span>\n      </div>\n      <div className={`step three ${activeStep.stepThree ? 'active' : ''}`}>\n        <div className=\"progress\" />\n        <span className=\"has-text-weight-bold\">03. Confirmation</span>\n      </div>\n    </Progress>\n  )",[1135,1140],[1729,1733],[9744,9745],"(e)",[10795,10802],[635,640],[1382,1389],[149,154],[213,218],[1164,1172],[1209,1217],[1254,1262],[1395,1402],[199,204],[246,251],[196,201],[328,333],[396,401],[170,175],[203,208],[1552,1556],[1971,1976],[2650,2654],[313,318],[362,371],[99,104]]